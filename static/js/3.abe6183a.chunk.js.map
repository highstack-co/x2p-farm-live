{"version":3,"sources":["hooks/useHarvest.ts","components/Popup.tsx","views/Farms/Heading.tsx","views/Farms/Nebula.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/Farms.tsx"],"names":["useHarvest","farmPid","dispatch","useDispatch","account","useWeb3React","masterChefContract","useMasterchef","onReward","useCallback","a","harvest","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","pid","Promise","all","styled","div","theme","colors","primary","background","Popup","animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","TextBox","H1","h1","P","p","LightBar","Flex","FarmImg","img","Heading","scene","camera","renderer","composer","src","alt","cloudParticles","render","canvas","domElement","width","clientWidth","height","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","forEach","rotation","z","requestAnimationFrame","Canvas","BG","Nebula","useEffect","bg","THREE","window","innerWidth","innerHeight","position","x","y","loadingManager","document","getElementById","style","display","ambient","add","directionalLight","set","purple","blue","green","querySelector","fog","setClearColor","color","loader","load","texture","cloudGeo","cloudMaterial","map","transparent","cloud","Math","random","PI","material","opacity","push","txture","textureEffect","PostProcessing","blendFunction","COLOR_DODGE","blendMode","value","bloomEffect","kernelSize","SMALL","useLuminanceFilter","luminanceThreshold","luminanceSmoothing","effectPass","renderToScreen","addPass","Init","id","StyledLinkExternal","LinkExternal","text","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","bold","CardHeading","Tag","isCommunityFarm","multiplier","farmImage","tokenSymbol","alignItems","mb","flexDirection","split","DepositModal","max","onConfirm","onDismiss","tokenName","decimals","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","ModalInput","onSelectMax","onChange","symbol","inputTitle","ModalActions","variant","onClick","disabled","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","displayBalance","toLocaleString","console","log","useModal","onPresentDeposit","onPresentWithdraw","mr","HarvestAction","earnings","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","lpAddresses","useFarmUser","allowance","lpAddress","getAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","error","textTransform","fontSize","pr","mt","UnlockButton","Grid","GridItem","Description","Text","ApyCalculatorModal","cakePrice","apy","farmApy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","calculateCakeEarnedPerThousandDollars","numberOfDays","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","apyModalRoi","amountEarned","amountInvested","ApyButton","onPresentApyModal","event","stopPropagation","scale","ml","RainbowLight","StyledCardAccent","secondary","borderColor","FCard","Divider","ExpandingWrapper","props","expanded","FarmCard","bnbPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","toLocaleLowerCase","totalValue","Number","liquidity","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","CAKE","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","quoteTokenAdresses","tokenAddresses","liquidityUrlPathParts","getLiquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","className","CardActionsContainer","ExpandableSectionButton","process","ControlContainer","mediaQueries","sm","Hero","textSubtle","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Farms","path","useRouteMatch","farmsLP","useFarms","rewardPerBlock","useFarmCakePerBlock","usePriceCakeBusd","x2pPrice","usePriceX2PBusd","usePriceBnbBusd","fastRefresh","useRefresh","activeFarms","farmsStaked","farmsToDisplay","cakePriceVsBNB","find","CAKE_POOL_PID","tokenPriceVsQuote","tokenAmount","cakeRewardPerBlock","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","lpTokenBalanceMC","X2P","cakeApy","dualApy","plus","farmsList","backgroundColor","Page","marginTop","exact"],"mappings":"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","file":"static/js/3.abe6183a.chunk.js","sourcesContent":["import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst PopupBox = styled.div`\n  position: fixed;\n  padding: 4rem 2rem 2rem 2rem;\n  min-height: 250px;\n  min-width: 300px;\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${({ theme }) => theme.colors.background};\n  border-radius: 15px;\n  color: #fff;\n`;\nconst CloseContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1000;\n`;\nconst Close = styled.div`\n  position: absolute;\n  top: 5%;\n  left: 93%;\n  height: 10%;\n  width: 0.5%;\n  transform: translate(-93%, -5%);\n  cursor: pointer;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #fff;\n    height: 100%;\n    width: 100%;\n    transform: rotate(45deg);\n  }\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #fff;\n    height: 100%;\n    width: 100%;\n    transform: rotate(-45deg);\n  }\n`;\n\nfunction Popup() {\n  const [open, setOpen] = useState(true);\n  return (\n    <div>\n      {open && (\n        <CloseContainer onClick={() => setOpen(false)}>\n          <PopupBox>\n            <Close onClick={() => setOpen(false)} />\n            <p style={{ textAlign: \"center\" }}>\n              <span style={{ fontSize: \"1.5em\", color: \"red\" }}>Xenon Machine V1 Deactivated</span>\n              <br />\n              <br />\n              We have begun to migrate to Xenon Machine V2. Rewards for V1\n              have now been turned off. Your staked tokens are still safe, but\n              they are not receiving any more rewards now.\n              <br />\n              <br />\n              We recommend you harvest your rewards and unstake your tokens from V1\n              and migrate them over to the V2 Farm.\n              <br />\n              <br />\n              Greetings, Staff Team.\n            </p>\n          </PopupBox>\n        </CloseContainer>\n      )}\n    </div>\n  );\n}\n\nexport default Popup;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 1rem auto;\n  width: 90vw;\n  background: rgba(0, 0, 0, 0.65);\n  /* background-color: #00b3ff24; */\n  border-radius: 10px;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #00b3ff, inset 0 0 0.2em #00b3ff,\n      inset 0 0 0.4em #00b3ff, 0 0 1em #00b3ff;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (min-width: 576px) {\n    margin: 0 auto;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 90vw;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 80vw;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  font-size: inherit;\n  /* white-space: nowrap; */\n  color: #fff;\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\n  /* transform: translate(-300px,0); */\n`;\nconst P = styled.p`\n  font-size: 0.3em;\n  line-height: 1;\n  color: #fff;\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\n`;\nconst LightBar = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #00b3ff, 0 0 20px #00b3ff, 0 0 40px #00b3ff,\n    0 0 80px #00b3ff, 0 0 120px #00b3ff;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${TextAnimation} 2s linear forwards;\n  font-size: 4rem;\n  h1 {\n    text-align: center;\n  }\n  p {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-around;\n    font-size: 5rem;\n    > * {\n      width: 50%;\n    }\n    h1,\n    p {\n      text-align: left;\n    }\n  }\n`;\nconst FarmImg = styled.img`\n  width: 150px;\n  height: 150px;\n\n  @media only screen and (min-width: 768px) {\n    width: 160px;\n    height: 160px;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 190px;\n    height: 190px;\n  }\n`;\nfunction Heading() {\n  return (\n    <Wrapper>\n      <TextBox>\n        <Flex>\n          <div>\n            <H1>\n              Reward Mechanism\n              <br />\n            </H1>\n            <P>Activate the Reward Mechanism to generate rewards.</P>\n          </div>\n          <FarmImg src=\"/images/bq.png\" alt=\"Xenon Machine Image\" />\n        </Flex>\n\n        <LightBar />\n      </TextBox>\n    </Wrapper>\n  );\n}\n\nexport default Heading;\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as PostProcessing from \"postprocessing\";\nimport styled from \"styled-components\";\n\nlet scene;\nlet camera;\nlet renderer;\nconst cloudParticles = [] as any;\nlet composer;\n\nfunction resizeCanvasToDisplaySize() {\n  const canvas = renderer.domElement;\n  // look up the size the canvas is being displayed\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    // update any render target sizes here\n  }\n}\n\nconst onWindowResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst Init = (bg = 0x130c14) => {\n  // const Parent = document.querySelector(\"#canvas\");\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n  // camera.position.x=-50;\n  // camera.position.y=;\n  camera.position.z = 1;\n  camera.rotation.x = 1.16;\n  camera.rotation.y = -0.12;\n  camera.rotation.z = 0.27;\n  const loadingManager = new THREE.LoadingManager(() => {\n    document.getElementById(\"FOGBG\").style.display = \"none\";\n  });\n  // const ambient = new THREE.AmbientLight(0x555555);\n  // scene.add(ambient);\n  // const directionalLight = new THREE.DirectionalLight(0x38edc3);\n  // directionalLight.position.set(0, 0, 1);\n  // scene.add(directionalLight);\n  // const redlight = new THREE.PointLight(0x640101, 50, 450, 1.7);\n  // redlight.position.set(200, 300, 100);\n  // scene.add(redlight);\n  // const purpleLight = new THREE.PointLight(0x771aff, 50, 450, 1.7);\n  // purpleLight.position.set(100, 300, 100);\n  // scene.add(purpleLight);\n  // const greenLight = new THREE.PointLight(0x45ca92, 50, 450, 1.7);\n  // greenLight.position.set(100, 300, 100);\n  // scene.add(greenLight);\n  // const blueLight = new THREE.PointLight(0x792e92, 50, 450, 1.7);\n  // blueLight.position.set(300, 300, 200);\n  // scene.add(blueLight);\n\n  const ambient = new THREE.AmbientLight(0x555555);\n  scene.add(ambient);\n  const directionalLight = new THREE.DirectionalLight(0x1fa4e9);\n  directionalLight.position.set(0, 0, 1);\n  scene.add(directionalLight);\n\n  const purple = new THREE.PointLight(0x170c73, 50, 450, 1.7);\n  purple.position.set(200, 300, 100);\n  scene.add(purple);\n  const blue = new THREE.PointLight(0x0b93de, 50, 450, 1.7);\n  blue.position.set(100, 300, 100);\n  scene.add(blue);\n  const green = new THREE.PointLight(0x1e8282, 50, 450, 1.7);\n  green.position.set(300, 300, 200);\n  scene.add(green);\n\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\"),\n  });\n  // console.log(\"width\",Parent?.getBoundingClientRect().width);\n  //   renderer.setSize(Parent?.getBoundingClientRect().width, Parent?.getBoundingClientRect().height);\n  scene.fog = new THREE.FogExp2(bg, 0.001);\n  renderer.setClearColor(scene.fog.color);\n\n  //   Parent?.appendChild(renderer.domElement);\n\n  const loader = new THREE.TextureLoader(loadingManager);\n  loader.load(\"/smoke.png\", function (texture) {\n    //  texture is loaded\n    const cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n    const cloudMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true,\n    });\n    for (let p = 0; p < 50; p++) {\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n      cloud.position.set(\n        Math.random() * 800 - 300,\n        500,\n        Math.random() * 450 - 450\n      );\n      cloud.rotation.x = 1.16;\n      cloud.rotation.y = -0.12;\n      cloud.rotation.z = Math.random() * 2 * Math.PI;\n      cloud.material.opacity = 0.55;\n      cloudParticles.push(cloud);\n      scene.add(cloud);\n    }\n  });\n\n  loader.load(\"/stars.jpeg\", (txture) => {\n    const textureEffect = new PostProcessing.TextureEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      texture: txture,\n    });\n    textureEffect.blendMode.opacity.value = 0.4;\n\n    const bloomEffect = new PostProcessing.BloomEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      kernelSize: PostProcessing.KernelSize.SMALL,\n      useLuminanceFilter: true,\n      luminanceThreshold: 0.3,\n      luminanceSmoothing: 0.75,\n    });\n    bloomEffect.blendMode.opacity.value = 1.5;\n\n    const effectPass = new PostProcessing.EffectPass(\n      camera,\n      bloomEffect,\n      textureEffect\n    );\n    effectPass.renderToScreen = true;\n\n    composer = new PostProcessing.EffectComposer(renderer);\n    composer.addPass(new PostProcessing.RenderPass(scene, camera));\n    composer.addPass(effectPass);\n\n    render();\n  });\n  //   console.log(renderer.domElement)\n};\n/* eslint-disable no-param-reassign */\nconst render = () => {\n  resizeCanvasToDisplaySize();\n  cloudParticles.forEach((p) => {\n    p.rotation.z -= 0.0015;\n  });\n  composer.render(0.1);\n  requestAnimationFrame(render);\n};\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: -1;\n`;\nconst BG = styled.div`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: url(\"/fog.jpeg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\nfunction Nebula() {\n  useEffect(() => {\n    // window.addEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    Init();\n    return () => {\n      //   window.removeEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas id=\"canvas\" />\n      <BG id=\"FOGBG\" />\n    </>\n  );\n}\n\nexport default Nebula;\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on BscScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {/* <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag> */}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { Button, Modal, LinkExternal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  addLiquidityUrl?: string;\r\n  decimals: number;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = \"\",\r\n  addLiquidityUrl,\r\n  decimals = 18\r\n}) => {\r\n  const [val, setVal] = useState(\"\");\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const TranslateString = useI18n();\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n  \r\n  return (\r\n    <Modal\r\n      title={TranslateString(1068, \"Stake LP tokens\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={TranslateString(1070, \"Stake\")}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, \"Cancel\")}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || fullBalance === \"0\" || val === \"0\"}\r\n          onClick={async () => {\r\n            setPendingTx(true);\r\n            await onConfirm(val);\r\n            setPendingTx(false);\r\n            onDismiss();\r\n          }}\r\n        >\r\n          {pendingTx\r\n            ? TranslateString(488, \"Pending Confirmation\")\r\n            : TranslateString(464, \"Confirm\")}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: \"center\" }}>\r\n        {TranslateString(999, \"Get\")} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { Button, Modal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  decimals: number;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\r\n  onConfirm,\r\n  onDismiss,\r\n  max,\r\n  tokenName = \"\",\r\n  decimals = 18\r\n}) => {\r\n  const [val, setVal] = useState(\"\");\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const TranslateString = useI18n();\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(1126, \"Unstake LP tokens\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={TranslateString(588, \"Unstake\")}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, \"Cancel\")}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true);\r\n            await onConfirm(val);\r\n            setPendingTx(false);\r\n            onDismiss();\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx\r\n            ? TranslateString(488, \"Pending Confirmation\")\r\n            : TranslateString(464, \"Confirm\")}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  AddIcon,\r\n  MinusIcon,\r\n  useModal,\r\n} from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { useStake } from \"hooks/useStake\";\r\n\r\nimport { useUnstake } from \"hooks/useUnstake\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport DepositModal from \"../DepositModal\";\r\nimport WithdrawModal from \"../WithdrawModal\";\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber;\r\n  tokenBalance?: BigNumber;\r\n  tokenName?: string;\r\n  pid?: number;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const { onStake } = useStake(pid);\r\n  const { onUnstake } = useUnstake(pid);\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance, pid === 3 ? 9 : 18);\r\n  const displayBalance = rawStakedBalance.toLocaleString();\r\n  console.log(\"onStake\", onStake, tokenName, addLiquidityUrl, tokenBalance);\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      decimals={pid === 3 ? 9 : 18}\r\n    />,\r\n  );\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={tokenName}\r\n      decimals={pid === 3 ? 9 : 18}\r\n    />,\r\n  );\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>\r\n        {TranslateString(999, \"Stake LP\")}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? \"textDisabled\" : \"text\"}>\r\n        {displayBalance}\r\n      </Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default StakeAction;\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const web3 = useWeb3()\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(758, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          XPLAY\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1072, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1074, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { Modal, Text, LinkExternal, Flex } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport {\r\n  calculateCakeEarnedPerThousandDollars,\r\n  apyModalRoi,\r\n} from \"utils/compoundApyHelpers\";\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void;\r\n  lpLabel?: string;\r\n  cakePrice?: BigNumber;\r\n  apy?: BigNumber;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: \"10px\";\r\n`;\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`;\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber();\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber();\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 1,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 7,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 30,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 365,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(860, \"Timeframe\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(858, \"ROI\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(864, \"XPLAY per $1000\")}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand1D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand7D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APR)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          \"Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.\",\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, \"Get\")} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApyCalculatorModal;\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Flex, Text, Skeleton } from \"@pancakeswap-libs/uikit\";\r\nimport { communityFarms } from \"config/constants\";\r\nimport { Farm } from \"state/types\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport ExpandableSectionButton from \"components/ExpandableSectionButton\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport { BASE_ADD_LIQUIDITY_URL } from \"config\";\r\nimport getLiquidityUrlPathParts from \"utils/getLiquidityUrlPathParts\";\r\nimport DetailsSection from \"./DetailsSection\";\r\nimport CardHeading from \"./CardHeading\";\r\nimport CardActionsContainer from \"./CardActionsContainer\";\r\nimport ApyButton from \"./ApyButton\";\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber;\r\n  liquidity?: BigNumber;\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\n\r\nconst StyledCardAccent = styled.div`\r\n  /* background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    ${({ theme }) => theme.colors.secondary} 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    ${({ theme }) => theme.colors.borderColor}  60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite; */\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  background: #1999da;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n\r\n  background: rgba(0, 0, 0, 0.65);\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid rgb(0 203 224);\r\n  box-shadow: 0 0 1rem rgb(0 146 224), inset 0 0 2.5rem 0 rgb(0 146 224 / 70%);\r\n\r\n  }\r\n`;\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  /* background: #1da2e7; */\r\n  /* border-radius: 32px; */\r\n  /* box-shadow: 0px 2px 12px 5px #1da2e7, inset 0px 1px 12px 5px #1da2e7; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n  min-width: 90vw;\r\n  @media only screen and (min-width: 490px) {\r\n    min-width: 400px;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? \"100%\" : \"0px\")};\r\n  overflow: hidden;\r\n`;\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue;\r\n  removed: boolean;\r\n  cakePrice?: BigNumber;\r\n  bnbPrice?: BigNumber;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({\r\n  farm,\r\n  removed,\r\n  cakePrice,\r\n  bnbPrice,\r\n  account,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol);\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  const farmImage = farm.lpSymbol.split(\" \")[0].toLocaleLowerCase();\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (Number(farm.liquidity)) {\r\n      return farm.liquidity;\r\n    }\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null;\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    return farm.lpTotalInQuoteToken;\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    farm.lpTotalInQuoteToken,\r\n    farm.quoteTokenSymbol,\r\n    farm.liquidity\r\n  ]);\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, {\r\n        maximumFractionDigits: 0,\r\n      })}`\r\n    : \"-\";\r\n\r\n  const lpLabel =\r\n    farm.lpSymbol && farm.lpSymbol.toUpperCase().replace(\"PANCAKE\", \"\");\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : \"XPLAY\";\r\n\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy\r\n      .times(new BigNumber(100))\r\n      .toNumber()\r\n      .toLocaleString(\"en-US\", { maximumFractionDigits: 2 });\r\n\r\n  const { quoteTokenAdresses, tokenAddresses } = farm;\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAdresses,\r\n    tokenAddresses,\r\n  });\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\r\n\r\n  return (\r\n    <FCard className=\"FarmCard\">\r\n      <StyledCardAccent />\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{TranslateString(736, \"APR\")}:</Text>\r\n          <Text bold style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(318, \"Earn\")}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        account={account}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${\r\n            farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n          }`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  );\r\n};\r\n\r\nexport default FarmCard;\r\n","import React, { useEffect, useCallback, useState, Suspense, lazy } from \"react\";\r\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Text } from \"@pancakeswap-libs/uikit\";\r\nimport styled from \"styled-components\";\r\nimport { BLOCKS_PER_YEAR, CAKE_POOL_PID } from \"config\";\r\nimport FlexLayout from \"components/layout/Flex\";\r\nimport Page from \"components/layout/Page\";\r\nimport Popup from \"components/Popup\";\r\nimport {\r\n  useFarms,\r\n  usePriceBnbBusd,\r\n  useFarmCakePerBlock,\r\n  usePriceX2PBusd,\r\n  usePriceCakeBusd,\r\n} from \"state/hooks\";\r\nimport useRefresh from \"hooks/useRefresh\";\r\nimport { fetchFarmUserDataAsync } from \"state/actions\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\n\r\nimport Heading from \"./Heading\";\r\nimport Nebula from \"./Nebula\";\r\n\r\nimport FarmCard, { FarmWithStakedValue } from \"./components/FarmCard/FarmCard\";\r\n\r\nimport Divider from \"../Pools/components/Divider\";\r\n\r\nconst MIGRATION_STARTED = false;\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  position: relative;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 85%;\r\n  padding: 18px 0 10px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  @media (min-width: 576px) {\r\n    flex-direction: row;\r\n    margin: 0;\r\n    max-width: none;\r\n    padding: 48px 0;\r\n  }\r\n  ul {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FarmVersionLabel = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\r\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\r\n`;\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const farmsLP = useFarms();\r\n  const rewardPerBlock = useFarmCakePerBlock();\r\n  const cakePrice = usePriceCakeBusd();\r\n  const x2pPrice = usePriceX2PBusd();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const { account } = useWeb3React();\r\n\r\n  const dispatch = useDispatch();\r\n  const { fastRefresh } = useRefresh();\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account));\r\n    }\r\n  }, [account, dispatch, fastRefresh]);\r\n\r\n  const activeFarms = farmsLP;\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmWithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(\r\n        farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote ||\r\n          0,\r\n      );\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map(\r\n        (farm) => {\r\n          if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n            return farm;\r\n          }\r\n          // TODO change this. Cake per block comse from farm.,\r\n          const cakeRewardPerBlock = new BigNumber(rewardPerBlock).times(\r\n            farm.poolWeight,\r\n          );\r\n          const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\r\n\r\n          // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n          const lpTotalInQuoteToken = farm.lpTotalInQuoteToken;\r\n\r\n          let apy = cakePriceVsBNB\r\n            .times(cakeRewardPerYear)\r\n            .div(lpTotalInQuoteToken);\r\n\r\n          if (\r\n            farm.quoteTokenSymbol === QuoteToken.BUSD ||\r\n            farm.quoteTokenSymbol === QuoteToken.UST\r\n          ) {\r\n            apy = cakePriceVsBNB\r\n              .times(cakeRewardPerYear)\r\n              .div(farm.lpTotalInQuoteToken)\r\n              .times(bnbPrice);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            apy = cakeRewardPerYear.div(farm.lpTokenBalanceMC);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            apy = cakeRewardPerYear\r\n              .times(cakePrice)\r\n              .div(farm.lpTokenBalanceMC)\r\n              .div(x2pPrice);\r\n          } else if (farm.dual) {\r\n            const cakeApy =\r\n              farm &&\r\n              cakePriceVsBNB\r\n                .times(cakeRewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n            const dualApy =\r\n              farm.tokenPriceVsQuote &&\r\n              new BigNumber(farm.tokenPriceVsQuote)\r\n                .times(farm.dual.rewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n\r\n            apy = cakeApy && dualApy && cakeApy.plus(dualApy);\r\n          }\r\n\r\n          let liquidity = farm.lpTotalInQuoteToken;\r\n\r\n          if (!farm.lpTotalInQuoteToken) {\r\n            liquidity = null;\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n            liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            liquidity = cakePrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            liquidity = x2pPrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n\r\n          return { ...farm, apy, liquidity };\r\n        },\r\n      );\r\n\r\n      return farmsToDisplayWithAPY;\r\n    },\r\n    [bnbPrice, farmsLP, cakePrice, rewardPerBlock, x2pPrice],\r\n  );\r\n\r\n  const farmsStaked = farmsList(activeFarms);\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    return (\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        {MIGRATION_STARTED && <Popup />}\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed={false}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed\r\n              />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nebula />\r\n      {/* <Popup/> */}\r\n      <Hero>\r\n        <div>\r\n          <Heading />\r\n          {/* <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            {TranslateString(999, \"Farms\")}\r\n          </Heading> */}\r\n          {/* <ul>\r\n            <li>\r\n              {TranslateString(\r\n                999,\r\n                \"Stake Liquidity Pool (LP) tokens to earn.\"\r\n              )}\r\n            </li>\r\n          </ul> */}\r\n        </div>\r\n      </Hero>\r\n      <Divider style={{ backgroundColor: \"#fff\" }} mb />\r\n      <Page style={{ position: \"relative\" }}>\r\n        {/* <Canvas/> */}\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleWrapper />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper />\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {MIGRATION_STARTED && (\r\n          <FarmVersionLabel>\r\n            <a href='/#/farmsV2'>\r\n            Xenon Machine V1 is now deactivated. Unstake your tokens and restake them\r\n            at V2.</a>\r\n            <br/>\r\n          </FarmVersionLabel>\r\n        )}\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Farms;\r\n"],"sourceRoot":""}