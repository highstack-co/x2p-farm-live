{"version":3,"sources":["views/Farms/components/ComingSoon.tsx"],"names":["getTime","now","Date","difference","min","sec","hr","Day","timeLeft","day","Math","floor","hour","Container","styled","Page","Text","h1","theme","colors","secondary","TimeBlock","span","TimeUnit","ComingSoon","useState","time","setTIme","useEffect","timer","setInterval","clearInterval"],"mappings":"uMAKMA,EAAU,WACd,IAAMC,GAAM,IAAIC,MAAOF,UAEjBG,EADU,IAAID,KAAK,oCAAoCF,UAChCC,EAEvBG,EAAMC,IACNC,EAAW,GAANF,EACLG,EAAW,GAALD,EACZ,MAAO,CACLE,SAAUL,EAAa,EACvBM,IAAKC,KAAKC,MAAMR,EAAaI,GAC7BK,KAAMF,KAAKC,MAAOR,EAAaI,EAAOD,GACtCF,IAAKM,KAAKC,MAAOR,EAAaG,EAAMF,GACpCC,IAAKK,KAAKC,MAAOR,EAAaC,EATpB,OAaRS,EAAYC,YAAOC,IAAPD,CAAH,qLASTE,EAAOF,IAAOG,GAAV,qHAKG,qBAAGC,MAAkBC,OAAOC,aAGnCC,EAAYP,IAAOQ,KAAV,wHAMTC,EAAWT,IAAOQ,KAAV,gHAqDCE,UA7Cf,WACE,MAAwBC,mBAASzB,KAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KASA,OARAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBH,EAAQ3B,OACP,KACH,OAAO,WACL+B,cAAcF,MAEf,IAED,mCACGH,EAAKlB,SACJ,cAACK,EAAD,UACE,eAACG,EAAD,wBAEE,uBAFF,sCAGE,uBACA,eAACK,EAAD,WACE,eAACE,EAAD,WACE,+BAAOG,EAAKjB,MACZ,0CAEF,eAACc,EAAD,WACE,+BAAOG,EAAKd,MAAQ,EAAb,WAAqBc,EAAKd,MAASc,EAAKd,OAC/C,2CAEF,eAACW,EAAD,WACE,+BAAOG,EAAKtB,KAAO,EAAZ,WAAoBsB,EAAKtB,KAAQsB,EAAKtB,MAC7C,6CAEF,eAACmB,EAAD,WACE,+BAAOG,EAAKrB,KAAO,EAAZ,WAAoBqB,EAAKrB,KAAQqB,EAAKrB,MAC7C,qDAMR,cAAC,IAAD","file":"static/js/10.6663feb6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Page from \"components/layout/Page\";\nimport Farms from \"../Farms\";\n\nconst getTime = () => {\n  const now = new Date().getTime();\n  const timeout = new Date(\"july 31, 2021 11:00:00 GMT+00:00\").getTime();\n  const difference = timeout - now;\n  const sec = 1000;\n  const min = sec * 60;\n  const hr = min * 60;\n  const Day = hr * 24;\n  return { \n    timeLeft: difference > 0,\n    day: Math.floor(difference / Day),\n    hour: Math.floor((difference % Day) / hr),\n    min: Math.floor((difference % hr) / min),\n    sec: Math.floor((difference % min) / sec),\n  };\n};\n\nconst Container = styled(Page)`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n`;\nconst Text = styled.h1`\n  color: #fff;\n  font-size: 36px;\n  line-height: 1.2;\n  span {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\nconst TimeBlock = styled.span`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst TimeUnit = styled.span`\n  span {\n    display: block;\n  }\n  span:last-child {\n    font-size: 16px;\n  }\n`;\nfunction ComingSoon() {\n  const [time, setTIme] = useState(getTime());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTIme(getTime());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return (\n    <>\n      {time.timeLeft ? (\n        <Container>\n          <Text>\n            Farms open\n            <br /> 11:00 am, August 31st, 2021. (UTC)\n            <br />\n            <TimeBlock>\n              <TimeUnit>\n                <span>{time.day}</span>\n                <span>Day</span>\n              </TimeUnit>\n              <TimeUnit>\n                <span>{time.hour <= 9 ? `0${time.hour}` : time.hour}</span>\n                <span>Hour</span>\n              </TimeUnit>\n              <TimeUnit>\n                <span>{time.min <= 9 ? `0${time.min}` : time.min}</span>\n                <span>Minute</span>\n              </TimeUnit>\n              <TimeUnit>\n                <span>{time.sec <= 9 ? `0${time.sec}` : time.sec}</span>\n                <span>Second</span>\n              </TimeUnit>\n            </TimeBlock>\n          </Text>\n        </Container>\n      ) : (\n        <Farms />\n      )}\n    </>\n  );\n}\n\nexport default ComingSoon;\n"],"sourceRoot":""}