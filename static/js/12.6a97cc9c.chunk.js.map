{"version":3,"sources":["views/FarmsV2/Heading.tsx","views/FarmsV2/Nebula.tsx","views/FarmsV2/components/FarmCard/DetailsSection.tsx","views/FarmsV2/components/FarmCard/CardHeading.tsx","views/FarmsV2/components/DepositModal.tsx","views/FarmsV2/components/WithdrawModal.tsx","views/FarmsV2/components/FarmCard/StakeAction.tsx","views/FarmsV2/components/FarmCard/HarvestAction.tsx","views/FarmsV2/components/FarmCard/CardActionsContainer.tsx","views/FarmsV2/components/FarmCard/ApyCalculatorModal.tsx","views/FarmsV2/components/FarmCard/ApyButton.tsx","views/FarmsV2/components/FarmCard/FarmCard.tsx","views/FarmsV2/FarmsV2.tsx"],"names":["animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","styled","div","TextBox","H1","h1","P","p","LightBar","Flex","FarmImg","img","Heading","scene","camera","renderer","composer","src","alt","cloudParticles","render","canvas","domElement","width","clientWidth","height","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","forEach","rotation","z","requestAnimationFrame","Canvas","BG","Nebula","useEffect","bg","THREE","window","innerWidth","innerHeight","position","x","y","loadingManager","document","getElementById","style","display","ambient","add","directionalLight","set","purple","blue","green","querySelector","fog","setClearColor","color","loader","load","texture","cloudGeo","cloudMaterial","map","transparent","cloud","Math","random","PI","material","opacity","push","txture","textureEffect","PostProcessing","blendFunction","COLOR_DODGE","blendMode","value","bloomEffect","kernelSize","SMALL","useLuminanceFilter","luminanceThreshold","luminanceSmoothing","effectPass","renderToScreen","addPass","Init","id","StyledLinkExternal","LinkExternal","theme","colors","text","primary","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","bold","CardHeading","Tag","isCommunityFarm","multiplier","farmImage","tokenSymbol","alignItems","mb","flexDirection","split","DepositModal","max","onConfirm","onDismiss","tokenName","decimals","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","ModalInput","onSelectMax","onChange","symbol","inputTitle","ModalActions","variant","onClick","disabled","a","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","index","farmAddress","onStake","useStakeV2","getAddress","onUnstake","useUnstakeV2","rawStakedBalance","getBalanceNumber","displayBalance","toLocaleString","useModal","onPresentDeposit","onPresentWithdraw","mr","HarvestAction","earnings","account","useWeb3React","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","useFarmV2FromSymbol","lpSymbol","lpAddresses","useFarmV2User","allowance","lpAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","farmContract","getFarmV2Contract","onApprove","useApprove","handleApprove","console","error","textTransform","fontSize","pr","mt","UnlockButton","Grid","GridItem","Description","Text","ApyCalculatorModal","cakePrice","apy","farmApy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","calculateCakeEarnedPerThousandDollars","numberOfDays","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","apyModalRoi","amountEarned","amountInvested","ApyButton","onPresentApyModal","event","stopPropagation","scale","ml","RainbowLight","fadeIn","StyledCardAccent","secondary","borderColor","FCard","Divider","ExpandingWrapper","props","expanded","FarmCard","bnbPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","toLocaleLowerCase","totalValue","Number","liquidity","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","CAKE","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","quoteTokenAdresses","tokenAddresses","liquidityUrlPathParts","getLiquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","className","CardActionsContainer","ExpandableSectionButton","process","ControlContainer","mediaQueries","sm","Hero","textSubtle","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","FarmVersionLabel","Farms","path","useRouteMatch","farmsLP","useFarmsV2","usePriceCakeBusd","x2pPrice","usePriceX2PBusd","usePriceBnbBusd","dispatch","useDispatch","fastRefresh","useRefresh","fetchFarmV2UserDataAsync","activeFarms","farmsStaked","farmsToDisplay","cakePriceVsBNB","tokenAmount","cakeRewardPerBlock","rewardTokenPerBlock","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","lpTokenBalanceMC","X2P","cakeApy","dualApy","tokenPriceVsQuote","rewardPerBlock","plus","farmsList","backgroundColor","Page","marginTop","exact"],"mappings":"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","file":"static/js/12.6a97cc9c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 1rem auto;\n  width: 90vw;\n  background: rgba(0, 0, 0, 0.65);\n  /* background-color: #00b3ff24; */\n  border-radius: 10px;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #00b3ff, inset 0 0 0.2em #00b3ff,\n      inset 0 0 0.4em #00b3ff, 0 0 1em #00b3ff;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (min-width: 576px) {\n    margin: 0 auto;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 90vw;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 80vw;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  font-size: inherit;\n  /* white-space: nowrap; */\n  color: #fff;\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\n  /* transform: translate(-300px,0); */\n`;\nconst P = styled.p`\n  font-size: 0.3em;\n  line-height: 1;\n  color: #fff;\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\n`;\nconst LightBar = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #00b3ff, 0 0 20px #00b3ff, 0 0 40px #00b3ff,\n    0 0 80px #00b3ff, 0 0 120px #00b3ff;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${TextAnimation} 2s linear forwards;\n  font-size: 4rem;\n  h1 {\n    text-align: center;\n  }\n  p {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-around;\n    font-size: 5rem;\n    > * {\n      width: 50%;\n    }\n    h1,\n    p {\n      text-align: left;\n    }\n  }\n`;\nconst FarmImg = styled.img`\n  width: 150px;\n  height: 150px;\n\n  @media only screen and (min-width: 768px) {\n    width: 160px;\n    height: 160px;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 190px;\n    height: 190px;\n  }\n`;\nfunction Heading() {\n  return (\n    <Wrapper>\n      <TextBox>\n        <Flex>\n          <div>\n            <H1>\n              Xenon Machines\n              <br />\n            </H1>\n            <P>Activate the Xenon Machines to generate rewards.</P>\n          </div>\n          <FarmImg src=\"/images/bq.png\" alt=\"Xenon Machine Image\" />\n        </Flex>\n\n        <LightBar />\n      </TextBox>\n    </Wrapper>\n  );\n}\n\nexport default Heading;\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as PostProcessing from \"postprocessing\";\nimport styled from \"styled-components\";\n\nlet scene;\nlet camera;\nlet renderer;\nconst cloudParticles = [] as any;\nlet composer;\n\nfunction resizeCanvasToDisplaySize() {\n  const canvas = renderer.domElement;\n  // look up the size the canvas is being displayed\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    // update any render target sizes here\n  }\n}\n\nconst onWindowResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst Init = (bg = 0x130c14) => {\n  // const Parent = document.querySelector(\"#canvas\");\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n  // camera.position.x=-50;\n  // camera.position.y=;\n  camera.position.z = 1;\n  camera.rotation.x = 1.16;\n  camera.rotation.y = -0.12;\n  camera.rotation.z = 0.27;\n  const loadingManager = new THREE.LoadingManager(() => {\n    document.getElementById(\"FOGBG\").style.display = \"none\";\n  });\n  // const ambient = new THREE.AmbientLight(0x555555);\n  // scene.add(ambient);\n  // const directionalLight = new THREE.DirectionalLight(0x38edc3);\n  // directionalLight.position.set(0, 0, 1);\n  // scene.add(directionalLight);\n  // const redlight = new THREE.PointLight(0x640101, 50, 450, 1.7);\n  // redlight.position.set(200, 300, 100);\n  // scene.add(redlight);\n  // const purpleLight = new THREE.PointLight(0x771aff, 50, 450, 1.7);\n  // purpleLight.position.set(100, 300, 100);\n  // scene.add(purpleLight);\n  // const greenLight = new THREE.PointLight(0x45ca92, 50, 450, 1.7);\n  // greenLight.position.set(100, 300, 100);\n  // scene.add(greenLight);\n  // const blueLight = new THREE.PointLight(0x792e92, 50, 450, 1.7);\n  // blueLight.position.set(300, 300, 200);\n  // scene.add(blueLight);\n\n  const ambient = new THREE.AmbientLight(0x555555);\n  scene.add(ambient);\n  const directionalLight = new THREE.DirectionalLight(0x1fa4e9);\n  directionalLight.position.set(0, 0, 1);\n  scene.add(directionalLight);\n\n  const purple = new THREE.PointLight(0x170c73, 50, 450, 1.7);\n  purple.position.set(200, 300, 100);\n  scene.add(purple);\n  const blue = new THREE.PointLight(0x0b93de, 50, 450, 1.7);\n  blue.position.set(100, 300, 100);\n  scene.add(blue);\n  const green = new THREE.PointLight(0x1e8282, 50, 450, 1.7);\n  green.position.set(300, 300, 200);\n  scene.add(green);\n\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\"),\n  });\n  // console.log(\"width\",Parent?.getBoundingClientRect().width);\n  //   renderer.setSize(Parent?.getBoundingClientRect().width, Parent?.getBoundingClientRect().height);\n  scene.fog = new THREE.FogExp2(bg, 0.001);\n  renderer.setClearColor(scene.fog.color);\n\n  //   Parent?.appendChild(renderer.domElement);\n\n  const loader = new THREE.TextureLoader(loadingManager);\n  loader.load(\"/smoke.png\", function (texture) {\n    //  texture is loaded\n    const cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n    const cloudMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true,\n    });\n    for (let p = 0; p < 50; p++) {\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n      cloud.position.set(\n        Math.random() * 800 - 300,\n        500,\n        Math.random() * 450 - 450\n      );\n      cloud.rotation.x = 1.16;\n      cloud.rotation.y = -0.12;\n      cloud.rotation.z = Math.random() * 2 * Math.PI;\n      cloud.material.opacity = 0.55;\n      cloudParticles.push(cloud);\n      scene.add(cloud);\n    }\n  });\n\n  loader.load(\"/stars.jpeg\", (txture) => {\n    const textureEffect = new PostProcessing.TextureEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      texture: txture,\n    });\n    textureEffect.blendMode.opacity.value = 0.4;\n\n    const bloomEffect = new PostProcessing.BloomEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      kernelSize: PostProcessing.KernelSize.SMALL,\n      useLuminanceFilter: true,\n      luminanceThreshold: 0.3,\n      luminanceSmoothing: 0.75,\n    });\n    bloomEffect.blendMode.opacity.value = 1.5;\n\n    const effectPass = new PostProcessing.EffectPass(\n      camera,\n      bloomEffect,\n      textureEffect\n    );\n    effectPass.renderToScreen = true;\n\n    composer = new PostProcessing.EffectComposer(renderer);\n    composer.addPass(new PostProcessing.RenderPass(scene, camera));\n    composer.addPass(effectPass);\n\n    render();\n  });\n  //   console.log(renderer.domElement)\n};\n/* eslint-disable no-param-reassign */\nconst render = () => {\n  resizeCanvasToDisplaySize();\n  cloudParticles.forEach((p) => {\n    p.rotation.z -= 0.0015;\n  });\n  composer.render(0.1);\n  requestAnimationFrame(render);\n};\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: -1;\n`;\nconst BG = styled.div`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: url(\"/fog.jpeg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\nfunction Nebula() {\n  useEffect(() => {\n    // window.addEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    Init();\n    return () => {\n      //   window.removeEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas id=\"canvas\" />\n      <BG id=\"FOGBG\" />\n    </>\n  );\n}\n\nexport default Nebula;\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on BscScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {/* <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag> */}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { Button, Modal, LinkExternal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  addLiquidityUrl?: string;\r\n  decimals: number;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = \"\",\r\n  addLiquidityUrl,\r\n  decimals = 18\r\n}) => {\r\n  const [val, setVal] = useState(\"\");\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const TranslateString = useI18n();\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n  \r\n  return (\r\n    <Modal\r\n      title={TranslateString(1068, \"Stake LP tokens\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={TranslateString(1070, \"Stake\")}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, \"Cancel\")}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || fullBalance === \"0\" || val === \"0\"}\r\n          onClick={async () => {\r\n            setPendingTx(true);\r\n            await onConfirm(val);\r\n            setPendingTx(false);\r\n            onDismiss();\r\n          }}\r\n        >\r\n          {pendingTx\r\n            ? TranslateString(488, \"Pending Confirmation\")\r\n            : TranslateString(464, \"Confirm\")}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: \"center\" }}>\r\n        {TranslateString(999, \"Get\")} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { Button, Modal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  decimals: number;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\r\n  onConfirm,\r\n  onDismiss,\r\n  max,\r\n  tokenName = \"\",\r\n  decimals = 18\r\n}) => {\r\n  const [val, setVal] = useState(\"\");\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const TranslateString = useI18n();\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(1126, \"Unstake LP tokens\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={TranslateString(588, \"Unstake\")}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, \"Cancel\")}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true);\r\n            await onConfirm(val);\r\n            setPendingTx(false);\r\n            onDismiss();\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx\r\n            ? TranslateString(488, \"Pending Confirmation\")\r\n            : TranslateString(464, \"Confirm\")}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  AddIcon,\r\n  MinusIcon,\r\n  useModal,\r\n} from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { useStakeV2 } from \"hooks/useStake\";\r\nimport { useUnstakeV2 } from \"hooks/useUnstake\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { Address } from \"config/constants/types\";\r\nimport DepositModal from \"../DepositModal\";\r\nimport WithdrawModal from \"../WithdrawModal\";\r\n\r\ninterface FarmV2CardActionsProps {\r\n  stakedBalance?: BigNumber;\r\n  tokenBalance?: BigNumber;\r\n  tokenName?: string;\r\n  index?: number;\r\n  addLiquidityUrl?: string;\r\n  farmAddress: Address;\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst StakeAction: React.FC<FarmV2CardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  index,\r\n  addLiquidityUrl,\r\n  farmAddress\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const { onStake } = useStakeV2(getAddress(farmAddress), index);\r\n  const { onUnstake } = useUnstakeV2(getAddress(farmAddress), index);\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance, index === 3 ? 9 : 18);\r\n  const displayBalance = rawStakedBalance.toLocaleString();\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      decimals={index === 3 ? 9 : 18}\r\n    />,\r\n  );\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={tokenName}\r\n      decimals={index === 3 ? 9 : 18}\r\n    />,\r\n  );\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>\r\n        {TranslateString(999, \"Stake LP\")}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? \"textDisabled\" : \"text\"}>\r\n        {displayBalance}\r\n      </Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default StakeAction;\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { useStakeV2 } from \"hooks/useStake\";\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  farmAddress: string\r\n  index: number\r\n\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, farmAddress, index }) => {\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onStake } = useStakeV2(farmAddress, index);\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onStake('0');\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { getBep20Contract, getFarmV2Contract } from \"utils/contractHelpers\";\r\nimport { Button, Flex, Text } from \"@pancakeswap-libs/uikit\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport { useFarmV2FromSymbol, useFarmV2User } from \"state/hooks\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport useWeb3 from \"hooks/useWeb3\";\r\nimport { useApprove } from \"hooks/useApprove\";\r\nimport UnlockButton from \"components/UnlockButton\";\r\nimport StakeAction from \"./StakeAction\";\r\nimport HarvestAction from \"./HarvestAction\";\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`;\r\nexport interface FarmV2WithStakedValue extends FarmV2 {\r\n  apy?: BigNumber;\r\n}\r\n\r\ninterface FarmV2CardActionsProps {\r\n  farm: FarmV2WithStakedValue;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst CardActions: React.FC<FarmV2CardActionsProps> = ({\r\n  farm,\r\n  account,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const [requestedApproval, setRequestedApproval] = useState(false);\r\n  const {\r\n    farm: { lpAddresses },\r\n    index,\r\n  } = useFarmV2FromSymbol(farm.lpSymbol);\r\n  const { allowance, tokenBalance, stakedBalance, earnings } =\r\n    useFarmV2User(index);\r\n  const lpAddress = getAddress(lpAddresses);\r\n  const lpName = farm.lpSymbol.toUpperCase();\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\r\n  const web3 = useWeb3();\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3);\r\n  const farmContract = getFarmV2Contract(getAddress(farm.farmAddress), web3);\r\n\r\n  const { onApprove } = useApprove(lpContract, farmContract);\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true);\r\n      await onApprove();\r\n      setRequestedApproval(false);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }, [onApprove]);\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        index={index}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        farmAddress={farm.farmAddress}\r\n      />\r\n    ) : (\r\n      <Button\r\n        mt=\"8px\"\r\n        width=\"100%\"\r\n        disabled={requestedApproval}\r\n        onClick={handleApprove}\r\n      >\r\n        {TranslateString(758, \"Approve Contract\")}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text\r\n          bold\r\n          textTransform=\"uppercase\"\r\n          color=\"secondary\"\r\n          fontSize=\"12px\"\r\n          pr=\"3px\"\r\n        >\r\n          XPLAY\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1072, \"Earned\")}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} farmAddress={getAddress(farm.farmAddress)} index={index} />\r\n      <Flex>\r\n        <Text\r\n          bold\r\n          textTransform=\"uppercase\"\r\n          color=\"secondary\"\r\n          fontSize=\"12px\"\r\n          pr=\"3px\"\r\n        >\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1074, \"Staked\")}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? (\r\n        <UnlockButton mt=\"8px\" width=\"100%\" />\r\n      ) : (\r\n        renderApprovalOrStakeButton()\r\n      )}\r\n    </Action>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { Modal, Text, LinkExternal, Flex } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport {\r\n  calculateCakeEarnedPerThousandDollars,\r\n  apyModalRoi,\r\n} from \"utils/compoundApyHelpers\";\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void;\r\n  lpLabel?: string;\r\n  cakePrice?: BigNumber;\r\n  apy?: BigNumber;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: \"10px\";\r\n`;\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`;\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber();\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber();\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 1,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 7,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 30,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 365,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(860, \"Timeframe\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(858, \"ROI\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(864, \"XPLAY per $1000\")}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand1D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand7D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APR)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          \"Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.\",\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, \"Get\")} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApyCalculatorModal;\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Flex, Text, Skeleton } from \"@pancakeswap-libs/uikit\";\r\nimport { communityFarms } from \"config/constants\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport ExpandableSectionButton from \"components/ExpandableSectionButton\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport { BASE_ADD_LIQUIDITY_URL } from \"config\";\r\nimport getLiquidityUrlPathParts from \"utils/getLiquidityUrlPathParts\";\r\nimport DetailsSection from \"./DetailsSection\";\r\nimport CardHeading from \"./CardHeading\";\r\nimport CardActionsContainer from \"./CardActionsContainer\";\r\nimport ApyButton from \"./ApyButton\";\r\n\r\nexport interface FarmV2WithStakedValue extends FarmV2 {\r\n  apy?: BigNumber;\r\n  liquidity?: BigNumber;\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    box-shadow: 0 0 1rem rgb(0 146 224), inset 0 0 2.5rem 0 rgb(0 146 224 / 70%);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 3rem rgb(0 146 224), inset 0 0 4.5rem 0 rgb(0 146 224 / 80%);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 1rem rgb(0 146 224), inset 0 0 2.5rem 0 rgb(0 146 224 / 70%);\r\n  }\r\n`;\r\n\r\nconst StyledCardAccent = styled.div`\r\n  /* background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    ${({ theme }) => theme.colors.secondary} 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    ${({ theme }) => theme.colors.borderColor}  60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite; */\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  background: #1999da;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n\r\n  background: rgba(0, 0, 0, 0.65);\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid rgb(0 203 224);\r\n  box-shadow: 0 0 1rem rgb(0 146 224), inset 0 0 2.5rem 0 rgb(0 146 224 / 70%);\r\n  animation: ${fadeIn} 1s 1s infinite;\r\n  }\r\n`;\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  /* background: #1da2e7; */\r\n  /* border-radius: 32px; */\r\n  /* box-shadow: 0px 2px 12px 5px #1da2e7, inset 0px 1px 12px 5px #1da2e7; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n  min-width: 90vw;\r\n  @media only screen and (min-width: 490px) {\r\n    min-width: 400px;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? \"100%\" : \"0px\")};\r\n  overflow: hidden;\r\n`;\r\n\r\ninterface FarmV2CardProps {\r\n  farm: FarmV2WithStakedValue;\r\n  removed: boolean;\r\n  cakePrice?: BigNumber;\r\n  bnbPrice?: BigNumber;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n}\r\n\r\nconst FarmCard: React.FC<FarmV2CardProps> = ({\r\n  farm,\r\n  removed,\r\n  cakePrice,\r\n  bnbPrice,\r\n  account,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol);\r\n\r\n  const farmImage = farm.lpSymbol.split(\" \")[0].toLocaleLowerCase();\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (Number(farm.liquidity)) {\r\n      return farm.liquidity;\r\n    }\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null;\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    return farm.lpTotalInQuoteToken;\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    farm.lpTotalInQuoteToken,\r\n    farm.quoteTokenSymbol,\r\n    farm.liquidity,\r\n  ]);\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, {\r\n        maximumFractionDigits: 0,\r\n      })}`\r\n    : \"-\";\r\n\r\n  const lpLabel =\r\n    farm.lpSymbol && farm.lpSymbol.toUpperCase().replace(\"PANCAKE\", \"\");\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : \"XPLAY\";\r\n\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy\r\n      .times(new BigNumber(100))\r\n      .toNumber()\r\n      .toLocaleString(\"en-US\", { maximumFractionDigits: 2 });\r\n\r\n  const { quoteTokenAdresses, tokenAddresses } = farm;\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAdresses,\r\n    tokenAddresses,\r\n  });\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\r\n\r\n  return (\r\n    <FCard className=\"FarmCard\">\r\n      <StyledCardAccent />\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{TranslateString(736, \"APR\")}:</Text>\r\n          <Text bold style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(318, \"Earn\")}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        account={account}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${\r\n            farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n          }`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  );\r\n};\r\n\r\nexport default FarmCard;\r\n","import React, { useEffect, useCallback, useState, Suspense, lazy } from \"react\";\r\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Image, RowType, Toggle, Text } from \"@pancakeswap-libs/uikit\";\r\nimport styled from \"styled-components\";\r\nimport { BLOCKS_PER_YEAR, CAKE_POOL_PID } from \"config\";\r\nimport FlexLayout from \"components/layout/Flex\";\r\nimport Page from \"components/layout/Page\";\r\nimport Popup from \"components/Popup\";\r\nimport {\r\n  useFarmsV2,\r\n  usePriceBnbBusd,\r\n  usePriceX2PBusd,\r\n  usePriceCakeBusd,\r\n} from \"state/hooks\";\r\nimport useRefresh from \"hooks/useRefresh\";\r\nimport { fetchFarmV2UserDataAsync } from \"state/actions\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { orderBy } from \"lodash\";\r\nimport Heading from \"./Heading\";\r\nimport Nebula from \"./Nebula\";\r\n\r\nimport FarmCard, {\r\n  FarmV2WithStakedValue,\r\n} from \"./components/FarmCard/FarmCard\";\r\nimport FarmTabButtons from \"./components/FarmTabButtons\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport ToggleView from \"./components/ToggleView/ToggleView\";\r\nimport { DesktopColumnSchema, ViewMode } from \"./components/types\";\r\nimport Select, { OptionProps } from \"./components/Select/Select\";\r\nimport Divider from \"../Pools/components/Divider\";\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  position: relative;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 85%;\r\n  padding: 18px 0 10px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  @media (min-width: 576px) {\r\n    flex-direction: row;\r\n    margin: 0;\r\n    max-width: none;\r\n    padding: 48px 0;\r\n  }\r\n  ul {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FarmVersionLabel = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\r\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\r\n`;\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const farmsLP = useFarmsV2();\r\n  const cakePrice = usePriceCakeBusd();\r\n  const x2pPrice = usePriceX2PBusd();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const { account } = useWeb3React();\r\n\r\n  const dispatch = useDispatch();\r\n  const { fastRefresh } = useRefresh();\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmV2UserDataAsync(account));\r\n    }\r\n  }, [account, dispatch, fastRefresh]);\r\n\r\n  const activeFarms = farmsLP;\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmV2WithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(cakePrice.div(bnbPrice));\r\n      const farmsToDisplayWithAPY: FarmV2WithStakedValue[] = farmsToDisplay.map(\r\n        (farm: FarmV2, index: number) => {\r\n          if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n            return farm;\r\n          }\r\n          // TODO change this. Cake per block comse from farm.,\r\n          const cakeRewardPerBlock = new BigNumber(farm.rewardTokenPerBlock);\r\n          const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\r\n\r\n          // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n          const lpTotalInQuoteToken = farm.lpTotalInQuoteToken;\r\n\r\n          let apy = cakePriceVsBNB\r\n            .times(cakeRewardPerYear)\r\n            .div(lpTotalInQuoteToken);\r\n\r\n          if (\r\n            farm.quoteTokenSymbol === QuoteToken.BUSD ||\r\n            farm.quoteTokenSymbol === QuoteToken.UST\r\n          ) {\r\n            apy = cakePriceVsBNB\r\n              .times(cakeRewardPerYear)\r\n              .div(farm.lpTotalInQuoteToken)\r\n              .times(bnbPrice);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            apy = cakeRewardPerYear.div(farm.lpTokenBalanceMC);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            apy = cakeRewardPerYear\r\n              .times(cakePrice)\r\n              .div(farm.lpTokenBalanceMC)\r\n              .div(x2pPrice);\r\n          } else if (farm.dual) {\r\n            const cakeApy =\r\n              farm &&\r\n              cakePriceVsBNB\r\n                .times(cakeRewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n            const dualApy =\r\n              farm.tokenPriceVsQuote &&\r\n              new BigNumber(farm.tokenPriceVsQuote)\r\n                .times(farm.dual.rewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n\r\n            apy = cakeApy && dualApy && cakeApy.plus(dualApy);\r\n          }\r\n\r\n          let liquidity = farm.lpTotalInQuoteToken;\r\n\r\n          if (!farm.lpTotalInQuoteToken) {\r\n            liquidity = null;\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n            liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            liquidity = cakePrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            liquidity = x2pPrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n\r\n          return { ...farm, apy, liquidity };\r\n        },\r\n      );\r\n\r\n      return farmsToDisplayWithAPY;\r\n    },\r\n    [bnbPrice, cakePrice, x2pPrice],\r\n  );\r\n\r\n  const farmsStaked = farmsList(activeFarms);\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    return (\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.lpSymbol}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed={false}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.lpSymbol}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed\r\n              />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nebula />\r\n      {/* <Popup/> */}\r\n      <Hero>\r\n        <div>\r\n          <Heading />\r\n        </div>\r\n      </Hero>\r\n      <Divider style={{ backgroundColor: \"#fff\" }} mb />\r\n      <Page style={{ position: \"relative\" }}>\r\n        {/* <Canvas/> */}\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleWrapper />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper />\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        <FarmVersionLabel>\r\n          <a href=\"/#/farms\">Cant find your staked tokens? Visit Farm V1</a>\r\n          <br />\r\n        </FarmVersionLabel>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Farms;\r\n"],"sourceRoot":""}