{"version":3,"sources":["components/layout/Flex.tsx","views/Farms/Heading.tsx","views/Farms/Nebula.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","hooks/useApprove.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Pools/components/Divider.tsx","views/Farms/Farms.tsx","views/Farms/components/ComingSoon.tsx","utils/formatBalance.ts","utils/callHelpers.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/index.ts","hooks/useHarvest.ts","components/UnlockButton.tsx"],"names":["FlexLayout","styled","div","animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","TextBox","H1","h1","P","p","LightBar","Flex","FarmImg","img","Heading","scene","camera","renderer","composer","src","alt","cloudParticles","render","canvas","domElement","width","clientWidth","height","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","forEach","rotation","z","requestAnimationFrame","Canvas","BG","Nebula","useEffect","bg","THREE","window","innerWidth","innerHeight","position","x","y","loadingManager","document","getElementById","style","display","ambient","add","directionalLight","set","purple","blue","green","querySelector","fog","setClearColor","color","loader","load","texture","cloudGeo","cloudMaterial","map","transparent","cloud","Math","random","PI","material","opacity","push","txture","textureEffect","PostProcessing","blendFunction","COLOR_DODGE","blendMode","value","bloomEffect","kernelSize","SMALL","useLuminanceFilter","luminanceThreshold","luminanceSmoothing","effectPass","renderToScreen","addPass","Init","id","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","bold","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","tokenAddresses","firstPart","process","secondPart","StyledLinkExternal","LinkExternal","text","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","CoreTag","props","variant","outline","startIcon","CommunityTag","CardHeading","Tag","isCommunityFarm","multiplier","farmImage","tokenSymbol","alignItems","mb","flexDirection","split","useStake","pid","dispatch","useDispatch","account","useWeb3React","masterChefContract","useMasterchef","onStake","useCallback","amount","a","stake","txHash","fetchFarmUserDataAsync","console","info","useUnstake","onUnstake","unstake","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","StyledTokenInput","input","isWarning","shadows","warning","inset","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","pl","fontSize","toLocaleString","placeholder","scale","mr","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","rawStakedBalance","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","HarvestAction","earnings","onReward","useHarvest","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","lpAddresses","useFarmUser","allowance","lpAddress","getAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","onApprove","lpContract","approve","tx","useApprove","getBep20Contract","handleApprove","error","textTransform","pr","mt","UnlockButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","farmApy","principal","cakePrice","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","apy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","ml","RainbowLight","StyledCardAccent","secondary","borderColor","FCard","Divider","ExpandingWrapper","FarmCard","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","toLocaleLowerCase","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","CAKE","ETH","Number","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","className","CardActionsContainer","textSubtle","ControlContainer","Hero","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Farms","path","useRouteMatch","farmsLP","useFarms","rewardPerBlock","useFarmCakePerBlock","usePriceCakeBusd","usePriceBnbBusd","fastRefresh","useRefresh","activeFarms","farmsStaked","farmsToDisplay","cakePriceVsBNB","find","CAKE_POOL_PID","tokenPriceVsQuote","tokenAmount","cakeRewardPerBlock","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","cakeApy","dualApy","plus","liquidity","farmsList","backgroundColor","Page","marginTop","exact","getTime","now","Date","difference","min","sec","hr","Day","timeLeft","day","floor","hour","Container","TimeBlock","span","TimeUnit","ComingSoon","time","setTIme","timer","setInterval","clearInterval","balance","decimals","dividedBy","pow","methods","options","address","ethers","constants","MaxUint256","send","from","deposit","toString","on","transactionHash","leaveStaking","gas","withdraw","sousUnstake","sousChefContract","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","lg","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL","farmPid","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useAuth","login","logout","onPresentConnectModal","useWalletModal"],"mappings":"kRAeeA,EAbIC,IAAOC,IAAV,4N,wCCCVC,EAAkBC,YAAH,0NAcfC,EAAmBD,YAAH,qQAchBE,EAAgBF,YAAH,qQAcbG,EAAaH,YAAH,uIAaVI,EAAUP,IAAOC,IAAV,iuBAgBIK,GAcXE,EAAUR,IAAOC,IAAV,qKAIEG,GAGTK,EAAKT,IAAOU,GAAV,8PAQFC,EAAIX,IAAOY,EAAV,wMAODC,EAAWb,IAAOC,IAAV,kUAWCC,GAETY,EAAOd,IAAOC,IAAV,gdAIKI,GAuBTU,EAAUf,IAAOgB,IAAV,uPAkCEC,I,ICnLXC,EACAC,EACAC,EAEAC,ED+KWJ,EArBf,WACE,OACE,cAACV,EAAD,UACE,eAACC,EAAD,WACE,eAAC,EAAD,WACE,gCACE,eAACC,EAAD,8BAEE,0BAEF,cAACE,EAAD,oEAEF,cAACI,EAAD,CAASO,IAAI,iBAAiBC,IAAI,2BAGpC,cAACV,EAAD,U,oBC1KFW,GAAiB,GAoBvB,IA4HMC,GAAS,SAATA,KA7IN,WACE,IAAMC,EAASN,EAASO,WAElBC,EAAQF,EAAOG,YACfC,EAASJ,EAAOK,aAGlBL,EAAOE,QAAUA,GAASF,EAAOI,SAAWA,IAE9CV,EAASY,QAAQJ,EAAOE,GAAQ,GAChCX,EAAOc,OAASL,EAAQE,EACxBX,EAAOe,0BAmITC,GACAX,GAAeY,SAAQ,SAACxB,GACtBA,EAAEyB,SAASC,GAAK,SAElBjB,EAASI,OAAO,IAChBc,sBAAsBd,IAGlBe,GAASxC,IAAO0B,OAAV,iMAYNe,GAAKzC,IAAOC,IAAV,0MA2BOyC,I,GAAAA,GAjBf,WASE,OARAC,qBAAU,WAGR,OAzJS,WAAoB,IAAnBC,EAAkB,uDAAb,QAEjB1B,EAAQ,IAAI2B,MACZ1B,EAAS,IAAI0B,IACX,GACAC,OAAOC,WAAaD,OAAOE,YAC3B,EACA,MAIKC,SAASX,EAAI,EACpBnB,EAAOkB,SAASa,EAAI,KACpB/B,EAAOkB,SAASc,GAAK,IACrBhC,EAAOkB,SAASC,EAAI,IACpB,IAAMc,EAAiB,IAAIP,KAAqB,WAC9CQ,SAASC,eAAe,SAASC,MAAMC,QAAU,UAoB7CC,EAAU,IAAIZ,IAAmB,SACvC3B,EAAMwC,IAAID,GACV,IAAME,EAAmB,IAAId,IAAuB,SACpDc,EAAiBV,SAASW,IAAI,EAAG,EAAG,GACpC1C,EAAMwC,IAAIC,GAEV,IAAME,EAAS,IAAIhB,IAAiB,QAAU,GAAI,IAAK,KACvDgB,EAAOZ,SAASW,IAAI,IAAK,IAAK,KAC9B1C,EAAMwC,IAAIG,GACV,IAAMC,EAAO,IAAIjB,IAAiB,OAAU,GAAI,IAAK,KACrDiB,EAAKb,SAASW,IAAI,IAAK,IAAK,KAC5B1C,EAAMwC,IAAII,GACV,IAAMC,EAAQ,IAAIlB,IAAiB,QAAU,GAAI,IAAK,KACtDkB,EAAMd,SAASW,IAAI,IAAK,IAAK,KAC7B1C,EAAMwC,IAAIK,GAEV3C,EAAW,IAAIyB,KAAoB,CACjCnB,OAAQ2B,SAASW,cAAc,aAIjC9C,EAAM+C,IAAM,IAAIpB,IAAcD,EAAI,MAClCxB,EAAS8C,cAAchD,EAAM+C,IAAIE,OAIjC,IAAMC,EAAS,IAAIvB,KAAoBO,GACvCgB,EAAOC,KAAK,cAAc,SAAUC,GAOlC,IALA,IAAMC,EAAW,IAAI1B,IAA0B,IAAK,KAC9C2B,EAAgB,IAAI3B,IAA0B,CAClD4B,IAAKH,EACLI,aAAa,IAEN9D,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAM+D,EAAQ,IAAI9B,IAAW0B,EAAUC,GACvCG,EAAM1B,SAASW,IACG,IAAhBgB,KAAKC,SAAiB,IACtB,IACgB,IAAhBD,KAAKC,SAAiB,KAExBF,EAAMtC,SAASa,EAAI,KACnByB,EAAMtC,SAASc,GAAK,IACpBwB,EAAMtC,SAASC,EAAoB,EAAhBsC,KAAKC,SAAeD,KAAKE,GAC5CH,EAAMI,SAASC,QAAU,IACzBxD,GAAeyD,KAAKN,GACpBzD,EAAMwC,IAAIiB,OAIdP,EAAOC,KAAK,eAAe,SAACa,GAC1B,IAAMC,EAAgB,IAAIC,KAA6B,CACrDC,cAAeD,KAA6BE,YAC5ChB,QAASY,IAEXC,EAAcI,UAAUP,QAAQQ,MAAQ,GAExC,IAAMC,EAAc,IAAIL,KAA2B,CACjDC,cAAeD,KAA6BE,YAC5CI,WAAYN,KAA0BO,MACtCC,oBAAoB,EACpBC,mBAAoB,GACpBC,mBAAoB,MAEtBL,EAAYF,UAAUP,QAAQQ,MAAQ,IAEtC,IAAMO,EAAa,IAAIX,KACrBjE,EACAsE,EACAN,GAEFY,EAAWC,gBAAiB,GAE5B3E,EAAW,IAAI+D,KAA8BhE,IACpC6E,QAAQ,IAAIb,KAA0BlE,EAAOC,IACtDE,EAAS4E,QAAQF,GAEjBtE,QAuCAyE,GACO,eAGN,IAGD,qCACE,cAAC1D,GAAD,CAAQ2D,GAAG,WACX,cAAC1D,GAAD,CAAI0D,GAAG,c,oBC1LP5F,GAAUP,IAAOC,IAAV,wJAOD,qBAAGmG,MAAkBC,OAAOC,WAIlCC,GAAkE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAClF,OACE,eAAC,GAAD,CAASC,aAAW,kCAAkCC,KAAK,SAASH,QAAS,kBAAMA,KAAnF,UACE,cAAC,IAAD,CAAMrC,MAAM,UAAUyC,MAAI,EAA1B,SACGH,EAAW,OAAS,YAEtBA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCF,GAAwBM,aAAe,CACrCJ,UAAU,GAGGF,I,6FAAAA,MC1BAO,GAPkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,eAEhDC,EAAYF,EADFG,IAEVC,EAAaH,EAFHE,IAGhB,MAAM,GAAN,OAAUD,EAAV,YAAuBE,ICOnB5G,GAAUP,IAAOC,IAAV,mDAIPmH,GAAqBpH,YAAOqH,IAAPrH,CAAH,sOAGb,qBAAGoG,MAAkBC,OAAOiB,QAQ3B,qBAAGlB,MAAkBC,OAAOC,WAkCzBiB,GA9B0C,SAAC,GAMnD,IALLC,EAKI,EALJA,eACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEMC,EAAkBC,eAExB,OACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMC,eAAe,gBAArB,UACE,eAAC,IAAD,WAAOF,EAAgB,IAAK,SAA5B,OACA,cAACT,GAAD,CAAoBY,KAAMJ,EAA1B,SAA4CD,QAE5CF,GACA,eAAC,IAAD,CAAMM,eAAe,gBAArB,UACE,eAAC,IAAD,WAAOF,EAAgB,GAAI,mBAA3B,OACA,cAAC,IAAD,UAAOH,OAGX,cAAC,IAAD,CAAMK,eAAe,aAArB,SACE,cAAC,IAAD,CAAME,UAAQ,EAACD,KAAMR,EAAgBZ,MAAM,EAA3C,SACGiB,EAAgB,IAAK,2BCpD1BK,GAAU,SAACC,GAAD,OACd,cAAC,IAAD,yBAAKC,QAAQ,YAAY7E,MAAO,CAACY,MAAM,QAASkE,SAAO,EAACC,UAAW,cAAC,IAAD,KAAsBH,GAAzF,wBAKII,GAAe,SAACJ,GAAD,OACnB,cAAC,IAAD,yBAAKC,QAAQ,aAAaC,SAAO,EAACC,UAAW,cAAC,IAAD,KAAuBH,GAApE,6BCGI5H,GAAUP,YAAOc,IAAPd,CAAH,oEA+BEwI,IAzBOxI,YAAOyI,IAAPzI,CAAH,mDAImC,SAAC,GAMhD,IALL2H,EAKI,EALJA,QAEAe,GAGI,EAJJC,WAII,EAHJD,iBACAE,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,OACE,eAAC,GAAD,CAASd,eAAe,gBAAgBe,WAAW,SAASC,GAAG,OAA/D,UACE,cAAC,IAAD,CAAOzH,IAAG,wBAAmBsH,EAAnB,QAAoCrH,IAAKsH,EAAajH,MAAO,GAAIE,OAAQ,KACnF,eAAC,IAAD,CAAMkH,cAAc,SAASF,WAAW,WAAxC,UACE,cAAC,IAAD,CAASC,GAAG,MAAZ,SAAmBpB,EAAQsB,MAAM,KAAK,KACtC,cAAC,IAAD,CAAMlB,eAAe,SAArB,SACGW,EAAkB,cAAC,GAAD,IAAmB,cAAC,GAAD,c,6FCZjCQ,GAjBE,SAACC,GAChB,IAAMC,EAAWC,cACTC,EAAYC,cAAZD,QACFE,EAAqBC,eAW3B,MAAO,CAAEC,QATWC,sBAAW,yCAC7B,WAAOC,GAAP,gBAAAC,EAAA,sEACuBC,aAAMN,EAAoBL,EAAKS,EAAQN,GAD9D,OACQS,EADR,OAEEX,EAASY,YAAuBV,IAChCW,QAAQC,KAAKH,GAHf,2CAD6B,sDAM7B,CAACT,EAASF,EAAUI,EAAoBL,MC0C7BgB,GAhDI,SAAChB,GAClB,IAAMC,EAAWC,cACTC,EAAYC,cAAZD,QACFE,EAAqBC,eAW3B,MAAO,CAAEW,UATaT,sBAAW,yCAC/B,WAAOC,GAAP,gBAAAC,EAAA,sEACuBQ,aAAQb,EAAoBL,EAAKS,EAAQN,GADhE,OACQS,EADR,OAEEX,EAASY,YAAuBV,IAChCW,QAAQC,KAAKH,GAHf,2CAD+B,sDAM/B,CAACT,EAASF,EAAUI,EAAoBL,M,UCOtCmB,GAAetK,IAAOC,IAAV,iEACN,SAACkI,GAAD,OAAWA,EAAMoC,QAClB,SAACpC,GAAD,OAAWA,EAAMoC,QAGbC,GA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACJ,GAAD,CAAcC,KAAME,KCJvBI,GAAqB7K,IAAOC,IAAV,uIAEF,SAACkI,GAAD,OAAWA,EAAM/B,MAAMC,OAAOyE,eAGvC,SAAC3C,GAAD,OAAWA,EAAM/B,MAAMsE,QAAQ,MAGtCK,GAAoB/K,IAAOC,IAAV,0CAIR+K,GA1BgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUK,OAC3C,OACE,cAACT,GAAD,UACGM,IAAMC,SAAS3G,IAAIwG,GAAU,SAACM,EAAOC,GAAR,OAC5B,qCACE,cAACT,GAAD,UAAoBQ,IACnBC,EAAIN,EAAI,GAAK,cAAC,GAAD,aCYlBO,GAAmBzL,IAAOC,IAAV,4MAGA,qBAAGmG,MAAkBC,OAAOqF,SAX7B,SAAC,GAAkC,IAAD,IAA/BC,iBAA+B,SAAZvF,EAAY,EAAZA,MACzC,OAAIuF,EACKvF,EAAMwF,QAAQC,QAGhBzF,EAAMwF,QAAQE,SASZ,qBAAG1F,MAAkBC,OAAOiB,QAKjCyE,GAAc/L,YAAOgM,IAAPhM,CAAH,4KAMb,qBAAGoG,MAAkB6F,aAAaC,MAIlC,qBAAG9F,MAAkB6F,aAAaE,MAKhCC,GAAqBpM,YAAOqM,IAAPrM,CAAH,yGAmDTsM,GA3C+B,SAAC,GAQxC,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,OACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAlH,EAGI,EAHJA,MACAoC,EAEI,EAFJA,gBACA+E,EACI,EADJA,WAEM9E,EAAkBC,eAClB8E,EAAwB,MAARL,IAAgBA,EAEhCM,EAAiBD,EAAgB,IAAME,WAAWP,GAAKQ,QAAQ,GAErE,OACE,sBAAKxJ,MAAO,CAAEN,SAAU,YAAxB,UACE,eAACwI,GAAD,CAAkBE,UAAWiB,EAA7B,UACE,eAAC,IAAD,CAAM7E,eAAe,gBAAgBiF,GAAG,OAAxC,UACE,cAAC,IAAD,CAAMC,SAAS,OAAf,SAAuBN,IACvB,eAAC,IAAD,CAAMM,SAAS,OAAf,UACGpF,EAAgB,KAAM,WADzB,KACuCgF,EAAeK,uBAGxD,eAAC,IAAD,CAAMpE,WAAW,WAAWf,eAAe,eAA3C,UACE,cAACgE,GAAD,CAAaU,SAAUA,EAAUU,YAAY,IAAI3H,MAAOA,IACxD,cAAC,IAAD,CAAQ4H,MAAM,KAAK5G,QAASkG,EAAaW,GAAG,MAA5C,SACGxF,EAAgB,IAAK,SAExB,cAAC,IAAD,CAAMoF,SAAS,OAAf,SAAuBT,UAG1BI,GACC,eAACR,GAAD,CAAoBa,SAAS,OAAO9I,MAAM,UAA1C,gCACsB,IACpB,eAAC,IAAD,CAAM8I,SAAS,OAAOrG,MAAM,EAAOoB,KAAMJ,EAAiBK,UAAQ,EAAC9D,MAAM,UAAzE,UACG0D,EAAgB,IAAK,OADxB,IACiC2E,YCvB5Bc,GAtDmC,SAAC,GAAoE,IAAlEf,EAAiE,EAAjEA,IAAKgB,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,UAAiD,IAAtCC,iBAAsC,MAA1B,GAA0B,EAAtB7F,EAAsB,EAAtBA,gBAAsB,EAC9F8F,mBAAS,IADqF,mBAC7GC,EAD6G,KACxGC,EADwG,OAElFF,oBAAS,GAFyE,mBAE7GG,EAF6G,KAElGC,EAFkG,KAG9GjG,EAAkBC,eAClBiG,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsB1B,KAC5B,CAACA,IAEE2B,EAAevE,uBACnB,SAACwE,GACCP,EAAOO,EAAEC,cAAc5I,SAEzB,CAACoI,IAGGS,EAAkB1E,uBAAY,WAClCiE,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOU,MAAOzG,EAAgB,KAAM,mBAAoB2F,UAAWA,EAAnE,UACE,cAAC,GAAD,CACEhI,MAAOmI,EACPjB,YAAa2B,EACb5B,SAAUyB,EACV3B,IAAKwB,EACLvB,OAAQiB,EACR7F,gBAAiBA,EACjB+E,WAAY9E,EAAgB,KAAM,WAEpC,eAAC,GAAD,WACE,cAAC,IAAD,CAAQO,QAAQ,YAAY5B,QAASgH,EAAW5L,MAAM,OAAtD,SACGiG,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEjG,MAAM,OACN2M,SAAUV,GAA6B,MAAhBE,GAA+B,MAARJ,EAC9CnH,QAAO,wBAAE,uBAAAqD,EAAA,6DACPiE,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAHX,SAUGK,EAAYhG,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,gBAGrF,eAAC,IAAD,CAAcG,KAAMJ,EAAiBrE,MAAO,CAAEiL,UAAW,UAAzD,UACG3G,EAAgB,IAAK,OADxB,IACiC4F,SCCxBgB,GAlDqC,SAAC,GAAmD,IAAjDlB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWjB,EAA0B,EAA1BA,IAA0B,IAArBkB,iBAAqB,MAAT,GAAS,IAC/EC,mBAAS,IADsE,mBAC9FC,EAD8F,KACzFC,EADyF,OAEnEF,oBAAS,GAF0D,mBAE9FG,EAF8F,KAEnFC,EAFmF,KAG/FjG,EAAkBC,eAClBiG,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsB1B,KAC5B,CAACA,IAEE2B,EAAevE,uBACnB,SAACwE,GACCP,EAAOO,EAAEC,cAAc5I,SAEzB,CAACoI,IAGGS,EAAkB1E,uBAAY,WAClCiE,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOU,MAAOzG,EAAgB,KAAM,qBAAsB2F,UAAWA,EAArE,UACE,cAAC,GAAD,CACEd,YAAa2B,EACb5B,SAAUyB,EACV1I,MAAOmI,EACPpB,IAAKwB,EACLvB,OAAQiB,EACRd,WAAY9E,EAAgB,IAAK,aAEnC,eAAC,GAAD,WACE,cAAC,IAAD,CAAQO,QAAQ,YAAY5B,QAASgH,EAAW5L,MAAM,OAAtD,SACGiG,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE0G,SAAUV,EACVrH,QAAO,wBAAE,uBAAAqD,EAAA,6DACPiE,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAMT5L,MAAM,OARR,SAUGiM,EAAYhG,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCvCrF6G,GAAoB1O,IAAOC,IAAV,gFAmDR0O,GA5CqC,SAAC,GAM9C,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACApB,EAGI,EAHJA,UACAtE,EAEI,EAFJA,IACAvB,EACI,EADJA,gBAEMC,EAAkBC,eAChB4B,EAAYR,GAASC,GAArBO,QACAU,EAAcD,GAAWhB,GAAzBiB,UAEF0E,EAAmBC,aAAiBH,GACpC/B,EAAiBiC,EAAiB5B,iBANpC,EAQuB8B,YACzB,cAAC,GAAD,CAAczC,IAAKsC,EAActB,UAAW7D,EAAS+D,UAAWA,EAAW7F,gBAAiBA,KADvFqH,EARH,sBAWwBD,YAC1B,cAAC,GAAD,CAAezC,IAAKqC,EAAerB,UAAWnD,EAAWqD,UAAWA,KAD/DyB,EAXH,oBA8BJ,OACE,eAAC,IAAD,CAAMnH,eAAe,gBAAgBe,WAAW,SAAhD,UACE,cAAC,IAAD,CAAS3E,MAA4B,IAArB2K,EAAyB,eAAiB,OAA1D,SAAmEjC,IAhBzC,IAArBiC,EACL,cAAC,IAAD,CAAQtI,QAASyI,EAAjB,SAAoCpH,EAAgB,IAAK,cAEzD,eAAC6G,GAAD,WACE,cAAC,IAAD,CAAYtG,QAAQ,WAAW5B,QAAS0I,EAAmB7B,GAAG,MAA9D,SACE,cAAC,IAAD,CAAWlJ,MAAM,UAAUvC,MAAM,WAEnC,cAAC,IAAD,CAAYwG,QAAQ,WAAW5B,QAASyI,EAAxC,SACE,cAAC,IAAD,CAAS9K,MAAM,UAAUvC,MAAM,kB,UCjB1BuN,GA1BuC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUjG,EAAU,EAAVA,IACzDG,EAAYC,cAAZD,QACFzB,EAAkBC,eAFmD,EAGzC4F,oBAAS,GAHgC,mBAGpEG,EAHoE,KAGzDC,EAHyD,KAInEuB,EAAaC,aAAWnG,GAAxBkG,SAEFE,EAAqBjG,EAAUyF,aAAiBK,GAAY,EAC5DvC,EAAiB0C,EAAmBrC,iBAE1C,OACE,eAAC,IAAD,CAAMnE,GAAG,MAAMhB,eAAe,gBAAgBe,WAAW,SAAzD,UACE,cAAC,IAAD,CAAS3E,MAA8B,IAAvBoL,EAA2B,eAAiB,OAA5D,SAAqE1C,IACrE,cAAC,IAAD,CACE0B,SAAiC,IAAvBgB,GAA4B1B,EACtCrH,QAAO,wBAAE,uBAAAqD,EAAA,6DACPiE,GAAa,GADN,SAEDuB,IAFC,OAGPvB,GAAa,GAHN,2CAFX,SAQGjG,EAAgB,IAAK,iBCjBxB2H,GAASxP,IAAOC,IAAV,oDA+EGwP,GAjEqC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMpG,EAA+B,EAA/BA,QAAS1B,EAAsB,EAAtBA,gBAC9DC,EAAkBC,eADkE,EAExC4F,oBAAS,GAF+B,mBAEnFiC,EAFmF,KAEhEC,EAFgE,OAG7DC,YAAkBH,EAAKI,UAA5C3G,EAHkF,EAGlFA,IAAK4G,EAH6E,EAG7EA,YAH6E,EAI7BC,YAAY7G,GAAjE8G,EAJkF,EAIlFA,UAAWpB,EAJuE,EAIvEA,aAAcD,EAJyD,EAIzDA,cAAeQ,EAJ0C,EAI1CA,SAC1Cc,EAAYC,aAAWJ,GACvBK,EAASV,EAAKI,SAASO,cACvBC,EAAahH,GAAW2G,GAAaA,EAAUM,cAAc,GAC7DC,EAAOC,eAILC,EChCgB,SAACC,GACzB,IAAMvH,EAAWC,cACTC,EAAYC,cAAZD,QACFE,EAAqBC,eAY3B,MAAO,CAAEiH,UAVa/G,sBAAW,wBAAC,6BAAAE,EAAA,+EAEb+G,aAAQD,EAAYnH,EAAoBF,GAF3B,cAExBuH,EAFwB,OAG9BzH,EAASY,YAAuBV,IAHF,kBAIvBuH,GAJuB,0DAMvB,GANuB,yDAQ/B,CAACvH,EAASF,EAAUuH,EAAYnH,KDmBbsH,CAFHC,aAAiBb,EAAWM,IAEvCE,UAEFM,EAAgBrH,sBAAW,wBAAC,uBAAAE,EAAA,sEAE9B+F,GAAqB,GAFS,SAGxBc,IAHwB,OAI9Bd,GAAqB,GAJS,gDAM9B3F,QAAQgH,MAAR,MAN8B,yDAQ/B,CAACP,IAkBJ,OACE,eAAClB,GAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM5I,MAAI,EAACsK,cAAc,YAAY/M,MAAM,YAAY8I,SAAS,OAAOkE,GAAG,MAA1E,mBAIA,cAAC,IAAD,CAAMvK,MAAI,EAACsK,cAAc,YAAY/M,MAAM,aAAa8I,SAAS,OAAjE,SACGpF,EAAgB,KAAM,eAG3B,cAAC,GAAD,CAAeuH,SAAUA,EAAUjG,IAAKA,IACxC,eAAC,IAAD,WACE,cAAC,IAAD,CAAMvC,MAAI,EAACsK,cAAc,YAAY/M,MAAM,YAAY8I,SAAS,OAAOkE,GAAG,MAA1E,SACGf,IAEH,cAAC,IAAD,CAAMxJ,MAAI,EAACsK,cAAc,YAAY/M,MAAM,aAAa8I,SAAS,OAAjE,SACGpF,EAAgB,KAAM,eAGzByB,EAnCGgH,EACL,cAAC,GAAD,CACE1B,cAAeA,EACfC,aAAcA,EACdpB,UAAW2C,EACXjH,IAAKA,EACLvB,gBAAiBA,IAGnB,cAAC,IAAD,CAAQwJ,GAAG,MAAMxP,MAAM,OAAO2M,SAAUoB,EAAmBnJ,QAASwK,EAApE,SACGnJ,EAAgB,IAAK,sBAyBZ,cAACwJ,GAAA,EAAD,CAAcD,GAAG,MAAMxP,MAAM,aExFlC0P,GAAwC,SAAC,GAA0C,IAF1EC,EAEkCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,QAO9DC,EAAY,IAP2E,EAAhBC,UAgB7E,OAlBoBJ,EAcAG,GAAa,EARZD,EAAU,KACHD,EAHJ,MAaaE,EAjBN9M,KAAKgN,MAAe,IAATL,GAAgB,KAqB/CM,GAAc,SAAC,GAE1B,OAF+D,EAAnCC,aAAmC,EAArBC,eACW,KACnChF,QAAQ,ICLtBiF,GAAOhS,IAAOC,IAAV,0JAOJgS,GAAWjS,IAAOC,IAAV,wDAIRiS,GAAclS,YAAOqM,IAAPrM,CAAH,2EA0JFmS,GArJ+C,SAAC,GAMxD,IALL3E,EAKI,EALJA,UACA7F,EAII,EAJJA,QACAgK,EAGI,EAHJA,UACAS,EAEI,EAFJA,IACAxK,EACI,EADJA,gBAEMC,EAAkBC,eAClB2J,EAAUW,EAAIC,MAAM,IAAIC,IAAU,MAAMC,WACxCC,EAAgC,IAAOb,EAAUY,WAEjDE,EAA0BnB,GAAsC,CACpEE,aAAc,EACdC,UACAE,cAEIe,EAA0BpB,GAAsC,CACpEE,aAAc,EACdC,UACAE,cAEIgB,EAA2BrB,GAAsC,CACrEE,aAAc,GACdC,UACAE,cAEIiB,EAA4BtB,GAAsC,CACtEE,aAAc,IACdC,UACAE,cAIF,OACE,eAAC,IAAD,CAAOrD,MAAM,MAAMd,UAAWA,EAA9B,UACE,eAACwE,GAAD,WACE,cAACC,GAAD,UACE,cAAC,IAAD,CACEhF,SAAS,OACTrG,MAAI,EACJzC,MAAM,aACN+M,cAAc,YACdnI,GAAG,OALL,SAOGlB,EAAgB,IAAK,iBAG1B,cAACoK,GAAD,UACE,cAAC,IAAD,CACEhF,SAAS,OACTrG,MAAI,EACJzC,MAAM,aACN+M,cAAc,YACdnI,GAAG,OALL,SAOGlB,EAAgB,IAAK,WAG1B,cAACoK,GAAD,UACE,cAAC,IAAD,CACEhF,SAAS,OACTrG,MAAI,EACJzC,MAAM,aACN+M,cAAc,YACdnI,GAAG,OALL,SAOGlB,EAAgB,IAAK,uBAI1B,cAACoK,GAAD,UACE,cAAC,IAAD,mBAEF,cAACA,GAAD,UACE,eAAC,IAAD,WACGJ,GAAY,CACXC,aAAcW,EACdV,eAAgBS,IAHpB,SAQF,cAACP,GAAD,UACE,cAAC,IAAD,UAAOQ,MAGT,cAACR,GAAD,UACE,cAAC,IAAD,mBAEF,cAACA,GAAD,UACE,eAAC,IAAD,WACGJ,GAAY,CACXC,aAAcY,EACdX,eAAgBS,IAHpB,SAQF,cAACP,GAAD,UACE,cAAC,IAAD,UAAOS,MAGT,cAACT,GAAD,UACE,cAAC,IAAD,oBAEF,cAACA,GAAD,UACE,eAAC,IAAD,WACGJ,GAAY,CACXC,aAAca,EACdZ,eAAgBS,IAHpB,SAQF,cAACP,GAAD,UACE,cAAC,IAAD,UAAOU,MAGT,cAACV,GAAD,UACE,cAAC,IAAD,0BAEF,cAACA,GAAD,UACE,eAAC,IAAD,WACGJ,GAAY,CACXC,aAAcc,EACdb,eAAgBS,IAHpB,SAQF,cAACP,GAAD,UACE,cAAC,IAAD,UAAOW,SAGX,cAACV,GAAD,CAAajF,SAAS,OAAO9I,MAAM,aAAnC,SACG0D,EACC,IACA,sKAGJ,cAAC,IAAD,CAAME,eAAe,SAArB,SACE,eAAC,IAAD,CAAcC,KAAMJ,EAApB,UACGC,EAAgB,IAAK,OADxB,IACiCF,WCnJ1BkL,GAjB6B,SAAC,GAAkD,IAAhDlL,EAA+C,EAA/CA,QAASgK,EAAsC,EAAtCA,UAAWS,EAA2B,EAA3BA,IAAKxK,EAAsB,EAAtBA,gBAAsB,EAChEoH,YAC1B,cAAC,GAAD,CAAoBrH,QAASA,EAASgK,UAAWA,EAAWS,IAAKA,EAAKxK,gBAAiBA,KADlFkL,EADqF,oBAU5F,OACE,cAAC,IAAD,CAAYtM,QANY,SAACuM,GACzBA,EAAMC,kBACNF,KAIwC1K,QAAQ,OAAOgF,MAAM,KAAK6F,GAAG,MAArE,SACE,cAAC,IAAD,CAAerR,MAAM,YCFrBsR,GAAe/S,YAAH,gLAYZgT,GAAmBnT,IAAOC,IAAV,qyBAMhB,qBAAEmG,MAAeC,OAAO+M,aAGxB,qBAAEhN,MAAeC,OAAOgN,cAOfH,IAkBTI,GAAQtT,IAAOC,IAAV,8aAiBLsT,GAAUvT,IAAOC,IAAV,8GACS,qBAAGmG,MAAkBC,OAAOgN,eAM5CG,GAAmBxT,IAAOC,IAAV,mEACV,SAACkI,GAAD,OAAYA,EAAM1B,SAAW,OAAS,SAsGnCgN,GAxF2B,SAAC,GAA+D,IAA7D/D,EAA4D,EAA5DA,KAAMjI,EAAsD,EAAtDA,QAASkK,EAA6C,EAA7CA,UAAW+B,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,SAAUrK,EAAc,EAAdA,QACnFzB,EAAkBC,eAD+E,EAG7C4F,oBAAS,GAHoC,mBAGhGkG,EAHgG,KAGzEC,EAHyE,KAKjGnL,EAAkBoL,KAAeC,SAASrE,EAAK7G,aAG/CD,EAAY8G,EAAKI,SAAS7G,MAAM,KAAK,GAAG+K,oBAExCC,EAAwBjG,mBAAQ,WACpC,OAAK0B,EAAKwE,oBAGNxE,EAAKyE,mBAAqBC,IAAWC,IAChCX,EAASrB,MAAM3C,EAAKwE,qBAEzBxE,EAAKyE,mBAAqBC,IAAWE,KAChC3C,EAAUU,MAAM3C,EAAKwE,qBAE1BxE,EAAKyE,mBAAqBC,IAAWG,IAChCZ,EAAStB,MAAM3C,EAAKwE,qBAEtBxE,EAAKwE,oBAXH,OAYR,CAACR,EAAU/B,EAAWgC,EAAUjE,EAAKwE,oBAAqBxE,EAAKyE,mBAE5DzM,EAAqBuM,EAAU,WAC7BO,OAAOP,GAAY/G,oBAAeuH,EAAW,CAAEC,sBAAuB,KAC1E,IAEE/M,EAAU+H,EAAKI,UAAYJ,EAAKI,SAASO,cAAcsE,QAAQ,UAAW,IAC1EC,EAAYlF,EAAKmF,KAAOnF,EAAKmF,KAAKD,UAAY,QAE9CE,EACJpF,EAAK0C,KAAO1C,EAAK0C,IAAIC,MAAM,IAAIC,IAAU,MAAMC,WAAWrF,eAAe,QAAS,CAAEwH,sBAAuB,IAErG3N,EAAuC2I,EAAvC3I,mBAAoBC,EAAmB0I,EAAnB1I,eACtB+N,EAAwBjO,GAAyB,CAAEC,qBAAoBC,mBACvEY,EAAe,UAAMoN,IAAN,YAAgCD,GAErD,OACE,eAACzB,GAAD,CAAO2B,UAAU,WAAjB,UACE,cAAC9B,GAAD,IACA,cAAC,GAAD,CACExL,QAASA,EACTgB,WAAY+G,EAAK/G,WACjBD,gBAAiBA,EACjBE,UAAWA,EACXC,YAAa6G,EAAK7G,eAElBpB,GACA,eAAC,IAAD,CAAMM,eAAe,gBAAgBe,WAAW,SAAhD,UACE,eAAC,IAAD,WAAOjB,EAAgB,IAAK,OAA5B,OACA,cAAC,IAAD,CAAMjB,MAAI,EAACrD,MAAO,CAAEC,QAAS,OAAQsF,WAAY,UAAjD,SACG4G,EAAK0C,IACJ,qCACE,cAAC,GAAD,CAAWzK,QAASA,EAASC,gBAAiBA,EAAiB+J,UAAWA,EAAWS,IAAK1C,EAAK0C,MAC9F0C,EAFH,OAKA,cAAC,IAAD,CAAUhT,OAAQ,GAAIF,MAAO,UAKrC,eAAC,IAAD,CAAMmG,eAAe,gBAArB,UACE,eAAC,IAAD,WAAOF,EAAgB,IAAK,QAA5B,OACA,cAAC,IAAD,CAAMjB,MAAI,EAAV,SAAYgO,OAEd,cAACM,GAAD,CAAsBxF,KAAMA,EAAMpG,QAASA,EAAS1B,gBAAiBA,IACrE,cAAC2L,GAAD,IACA,cAAC,GAAD,CACE/M,QAAS,kBAAMqN,GAA0BD,IACzCnN,SAAUmN,IAEZ,cAACJ,GAAD,CAAkB/M,SAAUmN,EAA5B,SACE,cAAC,GAAD,CACEnM,QAASA,EACTD,eAAc,sCAAiCkI,EAAKK,YAAY7I,KAChEQ,mBAAoBA,EACpBC,QAASA,EACTC,gBAAiBA,UC1LZ5H,OAAOC,IAAtB,iHACsB,qBAAGmG,MAAkBC,OAAO8O,cAE/B,qBAAEpM,GAAS,GAAG,MC+B3BqM,GAAmBpV,IAAOC,IAAV,wQASlB,qBAAGmG,MAAkB6F,aAAaE,MAOhCkJ,GAAOrV,IAAOC,IAAV,mjBAEC,qBAAGmG,MAAkBC,OAAO8O,cA4BjCG,GAAgBtV,IAAOC,IAAV,oIAKfoM,KAKEkJ,GAAevV,IAAOC,IAAV,mEACZoM,KAKAmJ,GAAkBxV,IAAOC,IAAV,gKAMjB,qBAAGmG,MAAkB6F,aAAaE,MAMhCsJ,GAAezV,IAAOC,IAAV,qSAWd,qBAAGmG,MAAkB6F,aAAaE,MAgLvBuJ,GAtKS,WAAO,IACrBC,EAASC,cAATD,KACFE,EAAUC,cACVC,EAAiBC,cACjBrE,EAAYsE,cACZvC,EAAWwC,cACT5M,EAAYC,cAAZD,QAEFF,EAAWC,cACT8M,EAAgBC,cAAhBD,YACRxT,qBAAU,WACJ2G,GACFF,EAASY,YAAuBV,MAEjC,CAACA,EAASF,EAAU+M,IAEvB,IAAME,EAAcR,EA6EdS,EAxEY3M,uBAChB,SAAC4M,GAA2C,IAAD,EACnCC,EAAiB,IAAIlE,KACzB,UAAAuD,EAAQY,MAAK,SAAC/G,GAAD,OAAUA,EAAKvG,MAAQuN,cAApC,eAAoDC,oBAClD,GA+DJ,OA7DqDJ,EAAe9R,KAClE,SAACiL,GACC,IAAKA,EAAKkH,cAAgBlH,EAAKwE,oBAC7B,OAAOxE,EAGT,IAAMmH,EAAqB,IAAIvE,IAAUyD,GAAgB1D,MACvD3C,EAAKoH,YAEDC,EAAoBF,EAAmBxE,MAAM2E,KAG7C9C,EAAsBxE,EAAKwE,oBAE7B9B,EAAMoE,EACPnE,MAAM0E,GACN9W,IAAIiU,GAEP,GACExE,EAAKyE,mBAAqBC,IAAW6C,MACrCvH,EAAKyE,mBAAqBC,IAAW8C,IAErC9E,EAAMoE,EACHnE,MAAM0E,GACN9W,IAAIyP,EAAKwE,qBACT7B,MAAMqB,QACJ,GAAIhE,EAAKyE,mBAAqBC,IAAWE,KAC9ClC,EAAM2E,EAAkB9W,IAAIyP,EAAKwE,0BAC5B,GAAIxE,EAAKmF,KAAM,CACpB,IAAMsC,EACJzH,GACA8G,EACGnE,MAAMwE,GACNxE,MAAM2E,KACN/W,IAAIyP,EAAKwE,qBACRkD,EACJ1H,EAAKiH,mBACL,IAAIrE,IAAU5C,EAAKiH,mBAChBtE,MAAM3C,EAAKmF,KAAKkB,gBAChB1D,MAAM2E,KACN/W,IAAIyP,EAAKwE,qBAEd9B,EAAM+E,GAAWC,GAAWD,EAAQE,KAAKD,GAG3C,IAAIE,EAAY5H,EAAKwE,oBAYrB,OAVKxE,EAAKwE,sBACRoD,EAAY,MAEV5H,EAAKyE,mBAAqBC,IAAWC,MACvCiD,EAAY5D,EAASrB,MAAM3C,EAAKwE,sBAE9BxE,EAAKyE,mBAAqBC,IAAWE,OACvCgD,EAAY3F,EAAUU,MAAM3C,EAAKwE,sBAG5B,2BAAKxE,GAAZ,IAAkB0C,MAAKkF,mBAM7B,CAAC5D,EAAUmC,EAASlE,EAAWoE,GAGbwB,CAAUlB,GAmC9B,OACE,qCACE,cAAC,GAAD,IAEA,cAAChB,GAAD,UACE,8BACE,cAAC,EAAD,QAcJ,cAAC,GAAD,CAAS9R,MAAO,CAAEiU,gBAAiB,QAAUzO,IAAE,IAC/C,eAAC0O,EAAA,EAAD,CAAMlU,MAAO,CAAEN,SAAU,YAAzB,UAEE,eAACmS,GAAD,WACE,cAACK,GAAD,UACE,cAACH,GAAD,MAEF,cAACE,GAAD,UACE,cAACD,GAAD,SA3DN,qBAAKhS,MAAO,CAAEmU,UAAW,QAAzB,SACE,eAAC5W,EAAD,WACE,cAAC,IAAD,CAAO6W,OAAK,EAAChC,KAAI,UAAKA,GAAtB,SACGW,EAAY7R,KAAI,SAACiL,GAAD,OACf,cAAC,GAAD,CAEEA,KAAMA,EACNgE,SAAUA,EACV/B,UAAWA,EACXrI,QAASA,EACT7B,SAAS,GALJiI,EAAKvG,UAShB,cAAC,IAAD,CAAOwO,OAAK,EAAChC,KAAI,UAAKA,EAAL,YAAjB,SACGW,EAAY7R,KAAI,SAACiL,GAAD,OACf,cAAC,GAAD,CAEEA,KAAMA,EACNgE,SAAUA,EACV/B,UAAWA,EACXrI,QAASA,EACT7B,SAAO,GALFiI,EAAKvG,sBChPpByO,GAAU,WACd,IAAMC,GAAM,IAAIC,MAAOF,UAEjBG,EADU,IAAID,KAAK,oCAAoCF,UAChCC,EAEvBG,EAAMC,IACNC,EAAW,GAANF,EACLG,EAAW,GAALD,EACZ,MAAO,CACLE,SAAUL,EAAa,EACvBM,IAAKzT,KAAK0T,MAAMP,EAAaI,GAC7BI,KAAM3T,KAAK0T,MAAOP,EAAaI,EAAOD,GACtCF,IAAKpT,KAAK0T,MAAOP,EAAaG,EAAMF,GACpCC,IAAKrT,KAAK0T,MAAOP,EAAaC,EATpB,OAaRQ,GAAYxY,YAAOyX,IAAPzX,CAAH,uLASTqM,GAAOrM,IAAOU,GAAV,uHAKG,qBAAG0F,MAAkBC,OAAO+M,aAGnCqF,GAAYzY,IAAO0Y,KAAV,0HAMTC,GAAW3Y,IAAO0Y,KAAV,kHAqDCE,UA7Cf,WAAuB,IAAD,EACIlL,mBAASkK,MADb,mBACbiB,EADa,KACPC,EADO,KAUpB,OARAnW,qBAAU,WACR,IAAMoW,EAAQC,aAAY,WACxBF,EAAQlB,QACP,KACH,OAAO,WACLqB,cAAcF,MAEf,IAED,mCACGF,EAAKT,SACJ,cAACI,GAAD,UACE,eAACnM,GAAD,wBAEE,uBAFF,sCAGE,uBACA,eAACoM,GAAD,WACE,eAACE,GAAD,WACE,+BAAOE,EAAKR,MACZ,0CAEF,eAACM,GAAD,WACE,+BAAOE,EAAKN,MAAQ,EAAb,WAAqBM,EAAKN,MAASM,EAAKN,OAC/C,2CAEF,eAACI,GAAD,WACE,+BAAOE,EAAKb,KAAO,EAAZ,WAAoBa,EAAKb,KAAQa,EAAKb,MAC7C,6CAEF,eAACW,GAAD,WACE,+BAAOE,EAAKZ,KAAO,EAAZ,WAAoBY,EAAKZ,KAAQY,EAAKZ,MAC7C,qDAMR,cAAC,GAAD,Q,iCC5FR,yFAEalJ,EAAmB,SAACmK,GAAuC,IAAnBC,EAAkB,uDAAP,GACxDtM,EAAiB,IAAIyF,IAAU4G,GAASE,UAAU,IAAI9G,IAAU,IAAI+G,IAAIF,IAC9E,OAAOtM,EAAe0F,YAGXtE,EAAwB,SAACiL,GAAuC,IAAnBC,EAAkB,uDAAP,GACnE,OAAOD,EAAQE,UAAU,IAAI9G,IAAU,IAAI+G,IAAIF,IAAWpM,Y,sWCL/C6D,EAAO,uCAAG,WAAOD,EAAYnH,EAAoBF,GAAvC,SAAAO,EAAA,+EACd8G,EAAW2I,QACf1I,QAAQpH,EAAmB+P,QAAQC,QAASC,IAAOC,UAAUC,YAC7DC,KAAK,CAAEC,KAAMvQ,KAHK,2CAAH,0DAMPQ,EAAK,uCAAG,WAAON,EAAoBL,EAAKS,EAAQN,GAAxC,SAAAO,EAAA,yDACP,IAARV,EADe,yCAEVK,EAAmB8P,QACvBQ,QAAQ3Q,EAAK,IAAImJ,IAAU1I,GAAQyI,MAAM,IAAIC,IAAU,IAAI+G,IAAI,KAAKU,YACpEH,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBANG,gCAUZzQ,EAAmB8P,QACvBQ,QAAQ3Q,EAAK,IAAImJ,IAAU1I,GAAQyI,MAAM,IAAIC,IAAU,IAAI+G,IAAI,KAAKU,YACpEH,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBAdK,2CAAH,4DAoCL5P,EAAO,uCAAG,WAAOb,EAAoBL,EAAKS,EAAQN,GAAxC,SAAAO,EAAA,yDACT,IAARV,EADiB,yCAEZK,EAAmB8P,QACvBY,aAAa,IAAI5H,IAAU1I,GAAQyI,MAAM,IAAIC,IAAU,IAAI+G,IAAI,KAAKU,YACpEH,KAAK,CAAEC,KAAMvQ,EAAS6Q,IAAK,MAC3BH,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBANK,gCAUdzQ,EAAmB8P,QACvBc,SAASjR,EAAK,IAAImJ,IAAU1I,GAAQyI,MAAM,IAAIC,IAAU,IAAI+G,IAAI,KAAKU,YACrEH,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBAdO,2CAAH,4DAkBPI,EAAW,uCAAG,WAAOC,EAAkB1Q,GAAzB,6BAAAC,EAAA,yDAAiCsP,EAAjC,+BAA4C,GAAI7P,EAAhD,uBAEgB,+CAArCgR,EAAiBf,QAAQC,QAFJ,yCAGhBc,EAAiBhB,QACrBiB,oBACAX,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBAPS,UAUgB,+CAArCK,EAAiBf,QAAQC,QAVJ,yCAWhBc,EAAiBhB,QACrBiB,oBACAX,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBAfS,gCAmBlBK,EAAiBhB,QACrBc,SAAS,IAAI9H,IAAU1I,GAAQyI,MAAM,IAAIC,IAAU,IAAI+G,IAAIF,IAAWY,YACtEH,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBAvBW,2CAAH,wDA2BXO,EAAmB,uCAAG,WAAOF,EAAkB1Q,EAAQN,GAAjC,SAAAO,EAAA,+EAC1ByQ,EAAiBhB,QACrBiB,oBACAX,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBALmB,2CAAH,0DASnBQ,EAAO,uCAAG,WAAOjR,EAAoBL,EAAKG,GAAhC,SAAAO,EAAA,+EACdL,EAAmB8P,QACvBQ,QAAQ3Q,EAAK,KACbyQ,KAAK,CAAEC,KAAMvQ,IACb0Q,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBALO,2CAAH,0DASPS,EAAY,uCAAG,WAAOJ,EAAkBhR,GAAzB,SAAAO,EAAA,+EACnByQ,EAAiBhB,QACrBQ,QAAQ,KACRF,KAAK,CAAEC,KAAMvQ,EAAS6Q,IAAK,MAC3BH,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBALY,2CAAH,wDASZU,EAAe,uCAAG,WAAOL,EAAkBhR,GAAzB,SAAAO,EAAA,+EACtByQ,EAAiBhB,QACrBQ,UACAF,KAAK,CAAEC,KAAMvQ,EAAS6Q,IAAK,IAAQ3U,MAAO,IAAI8M,IAAU,KACxD0H,GAAG,mBAAmB,SAACnJ,GACtB,OAAOA,EAAGoJ,oBALe,2CAAH,yD,wDCtGbzB,EAbGxY,IAAOC,IAAV,iNAOX,qBAAGmG,MAAkB6F,aAAaE,MCNhCsL,EAAOzX,YAAOwY,EAAPxY,CAAH,oPAKN,qBAAGoG,MAAkB6F,aAAaE,MAKlC,qBAAG/F,MAAkB6F,aAAa2O,MAMvBnD,O,iCCnBf,mHAEAnF,IAAUuI,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGX,IAAM/D,EAAkB,IAAI1E,IAAU,SAEhCoE,EAAgB,EAEhBsE,EAAoB,4BACpBhG,EAAsB,UAAMgG,EAAN,UACC,UAAMA,EAAN,Y,yLCNvB1L,EAAa,SAAC2L,GACzB,IAAM7R,EAAWC,cACTC,EAAYC,cAAZD,QACFE,EAAqBC,cAQ3B,MAAO,CAAE4F,SANa1F,sBAAW,sBAAC,4BAAAE,EAAA,sEACX4Q,YAAQjR,EAAoByR,EAAS3R,GAD1B,cAC1BS,EAD0B,OAEhCX,EAASY,YAAuBV,IAFA,kBAGzBS,GAHyB,2CAI/B,CAACT,EAASF,EAAU6R,EAASzR,MAKrB0R,EAAgB,SAACC,GAAwB,IAC5C7R,EAAYC,cAAZD,QACFE,EAAqBC,cAU3B,MAAO,CAAE4F,SARa1F,sBAAW,sBAAC,4BAAAE,EAAA,6DAC1BuR,EAAkBD,EAASE,QAAO,SAACC,EAAOnS,GAC9C,MAAM,GAAN,mBAAWmS,GAAX,CAAkBb,YAAQjR,EAAoBL,EAAKG,OAClD,IAH6B,kBAKzBiS,QAAQC,IAAIJ,IALa,2CAM/B,CAAC9R,EAAS6R,EAAU3R,O,qFCdV6H,IAZM,SAAClJ,GACpB,IAAMN,EAAkBC,cADM,EAEJ2T,cAAlBC,EAFsB,EAEtBA,MAAOC,EAFe,EAEfA,OACPC,EAA0BC,YAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQpV,QAASoV,GAA2BzT,GAA5C,aACGN,EAAgB,IAAK","file":"static/js/6.a2b39839.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 1rem auto;\n  width: 90vw;\n  background: rgba(0, 0, 0, 0.65);\n  /* background-color: #00b3ff24; */\n  border-radius: 10px;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #00b3ff, inset 0 0 0.2em #00b3ff,\n      inset 0 0 0.4em #00b3ff, 0 0 1em #00b3ff;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (min-width: 576px) {\n    margin: 0 auto;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 90vw;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 80vw;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  font-size: inherit;\n  /* white-space: nowrap; */\n  color: #fff;\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\n  /* transform: translate(-300px,0); */\n`;\nconst P = styled.p`\n  font-size: 0.3em;\n  line-height: 1;\n  color: #fff;\n  text-shadow: 0 0 0.1em #00b3ff, 0 0 0.2em #00b3ff, 0 0 0.4em #00b3ff,\n    0 0 0.8em #00b3ff, 0 0 1.6em #00b3ff;\n`;\nconst LightBar = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #00b3ff, 0 0 20px #00b3ff, 0 0 40px #00b3ff,\n    0 0 80px #00b3ff, 0 0 120px #00b3ff;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${TextAnimation} 2s linear forwards;\n  font-size: 4rem;\n  h1 {\n    text-align: center;\n  }\n  p {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-around;\n    font-size: 5rem;\n    > * {\n      width: 50%;\n    }\n    h1,\n    p {\n      text-align: left;\n    }\n  }\n`;\nconst FarmImg = styled.img`\n  width: 150px;\n  height: 150px;\n\n  @media only screen and (min-width: 768px) {\n    width: 160px;\n    height: 160px;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 190px;\n    height: 190px;\n  }\n`;\nfunction Heading() {\n  return (\n    <Wrapper>\n      <TextBox>\n        <Flex>\n          <div>\n            <H1>\n              Reward Mechanism\n              <br />\n            </H1>\n            <P>Activate the Reward Mechanism to generate rewards.</P>\n          </div>\n          <FarmImg src=\"/images/bq.png\" alt=\"Xenon Machine Image\" />\n        </Flex>\n\n        <LightBar />\n      </TextBox>\n    </Wrapper>\n  );\n}\n\nexport default Heading;\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as PostProcessing from \"postprocessing\";\nimport styled from \"styled-components\";\n\nlet scene;\nlet camera;\nlet renderer;\nconst cloudParticles = [] as any;\nlet composer;\n\nfunction resizeCanvasToDisplaySize() {\n  const canvas = renderer.domElement;\n  // look up the size the canvas is being displayed\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    // update any render target sizes here\n  }\n}\n\nconst onWindowResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst Init = (bg = 0x130c14) => {\n  // const Parent = document.querySelector(\"#canvas\");\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n  // camera.position.x=-50;\n  // camera.position.y=;\n  camera.position.z = 1;\n  camera.rotation.x = 1.16;\n  camera.rotation.y = -0.12;\n  camera.rotation.z = 0.27;\n  const loadingManager = new THREE.LoadingManager(() => {\n    document.getElementById(\"FOGBG\").style.display = \"none\";\n  });\n  // const ambient = new THREE.AmbientLight(0x555555);\n  // scene.add(ambient);\n  // const directionalLight = new THREE.DirectionalLight(0x38edc3);\n  // directionalLight.position.set(0, 0, 1);\n  // scene.add(directionalLight);\n  // const redlight = new THREE.PointLight(0x640101, 50, 450, 1.7);\n  // redlight.position.set(200, 300, 100);\n  // scene.add(redlight);\n  // const purpleLight = new THREE.PointLight(0x771aff, 50, 450, 1.7);\n  // purpleLight.position.set(100, 300, 100);\n  // scene.add(purpleLight);\n  // const greenLight = new THREE.PointLight(0x45ca92, 50, 450, 1.7);\n  // greenLight.position.set(100, 300, 100);\n  // scene.add(greenLight);\n  // const blueLight = new THREE.PointLight(0x792e92, 50, 450, 1.7);\n  // blueLight.position.set(300, 300, 200);\n  // scene.add(blueLight);\n\n  const ambient = new THREE.AmbientLight(0x555555);\n  scene.add(ambient);\n  const directionalLight = new THREE.DirectionalLight(0x1fa4e9);\n  directionalLight.position.set(0, 0, 1);\n  scene.add(directionalLight);\n\n  const purple = new THREE.PointLight(0x170c73, 50, 450, 1.7);\n  purple.position.set(200, 300, 100);\n  scene.add(purple);\n  const blue = new THREE.PointLight(0x0b93de, 50, 450, 1.7);\n  blue.position.set(100, 300, 100);\n  scene.add(blue);\n  const green = new THREE.PointLight(0x1e8282, 50, 450, 1.7);\n  green.position.set(300, 300, 200);\n  scene.add(green);\n\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\"),\n  });\n  // console.log(\"width\",Parent?.getBoundingClientRect().width);\n  //   renderer.setSize(Parent?.getBoundingClientRect().width, Parent?.getBoundingClientRect().height);\n  scene.fog = new THREE.FogExp2(bg, 0.001);\n  renderer.setClearColor(scene.fog.color);\n\n  //   Parent?.appendChild(renderer.domElement);\n\n  const loader = new THREE.TextureLoader(loadingManager);\n  loader.load(\"/smoke.png\", function (texture) {\n    //  texture is loaded\n    const cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n    const cloudMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true,\n    });\n    for (let p = 0; p < 50; p++) {\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n      cloud.position.set(\n        Math.random() * 800 - 300,\n        500,\n        Math.random() * 450 - 450\n      );\n      cloud.rotation.x = 1.16;\n      cloud.rotation.y = -0.12;\n      cloud.rotation.z = Math.random() * 2 * Math.PI;\n      cloud.material.opacity = 0.55;\n      cloudParticles.push(cloud);\n      scene.add(cloud);\n    }\n  });\n\n  loader.load(\"/stars.jpeg\", (txture) => {\n    const textureEffect = new PostProcessing.TextureEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      texture: txture,\n    });\n    textureEffect.blendMode.opacity.value = 0.4;\n\n    const bloomEffect = new PostProcessing.BloomEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      kernelSize: PostProcessing.KernelSize.SMALL,\n      useLuminanceFilter: true,\n      luminanceThreshold: 0.3,\n      luminanceSmoothing: 0.75,\n    });\n    bloomEffect.blendMode.opacity.value = 1.5;\n\n    const effectPass = new PostProcessing.EffectPass(\n      camera,\n      bloomEffect,\n      textureEffect\n    );\n    effectPass.renderToScreen = true;\n\n    composer = new PostProcessing.EffectComposer(renderer);\n    composer.addPass(new PostProcessing.RenderPass(scene, camera));\n    composer.addPass(effectPass);\n\n    render();\n  });\n  //   console.log(renderer.domElement)\n};\n/* eslint-disable no-param-reassign */\nconst render = () => {\n  resizeCanvasToDisplaySize();\n  cloudParticles.forEach((p) => {\n    p.rotation.z -= 0.0015;\n  });\n  composer.render(0.1);\n  requestAnimationFrame(render);\n};\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: -1;\n`;\nconst BG = styled.div`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: url(\"/fog.jpeg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\nfunction Nebula() {\n  useEffect(() => {\n    // window.addEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    Init();\n    return () => {\n      //   window.removeEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas id=\"canvas\" />\n      <BG id=\"FOGBG\" />\n    </>\n  );\n}\n\nexport default Nebula;\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on BscScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst CoreTag = (props) => (\r\n  <Tag variant=\"secondary\" style={{color:\"#fff\"}} outline startIcon={<VerifiedIcon />} {...props}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />} {...props}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = (props) => (\r\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />} {...props}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nconst DualTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline {...props}>\r\n    Dual\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {/* <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag> */}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">\r\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\r\n          </Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {TranslateString(452, 'Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          No tokens to stake:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {TranslateString(999, 'get')} {symbol}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={TranslateString(1070, 'Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {TranslateString(999, 'Get')} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={TranslateString(588, 'Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const web3 = useWeb3()\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(758, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          XPLAY\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1072, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1074, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  // const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  \r\n  const finalAmount = principal * (1 + (apyAsDecimal * daysAsDecimalOfYear));\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { Modal, Text, LinkExternal, Flex } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport {\r\n  calculateCakeEarnedPerThousandDollars,\r\n  apyModalRoi,\r\n} from \"utils/compoundApyHelpers\";\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void;\r\n  lpLabel?: string;\r\n  cakePrice?: BigNumber;\r\n  apy?: BigNumber;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: \"10px\";\r\n`;\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`;\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber();\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber();\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 1,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 7,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 30,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 365,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(860, \"Timeframe\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(858, \"ROI\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(864, \"XPLAY per $1000\")}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand1D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand7D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APR)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          \"Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.\",\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, \"Get\")} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApyCalculatorModal;\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  /* background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    ${({theme})=>theme.colors.secondary} 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    ${({theme})=>theme.colors.borderColor}  60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite; */\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  background: #1999da;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n\r\n  background: rgba(0, 0, 0, 0.65);\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid rgb(0 203 224);\r\n  box-shadow: 0 0 1rem rgb(0 146 224), inset 0 0 2.5rem 0 rgb(0 146 224 / 70%);\r\n\r\n  }\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  /* background: #1da2e7; */\r\n  /* border-radius: 32px; */\r\n  /* box-shadow: 0px 2px 12px 5px #1da2e7, inset 0px 1px 12px 5px #1da2e7; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n  min-width:90vw;\r\n  @media only screen and (min-width: 490px) {\r\n    min-width:400px;\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  provider?: ProviderType\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'XPLAY'\r\n\r\n  const farmAPY =\r\n    farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  const { quoteTokenAdresses, tokenAddresses } = farm\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return (\r\n    <FCard className=\"FarmCard\">\r\n      <StyledCardAccent />\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{TranslateString(736, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div<{mb:boolean}>`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto ${({mb})=>mb?10:60}px;\r\n  width: 100%;\r\n`\r\n","import React, { useEffect, useCallback, useState, Suspense, lazy } from \"react\";\r\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Image, RowType, Toggle, Text } from \"@pancakeswap-libs/uikit\";\r\nimport styled from \"styled-components\";\r\nimport { BLOCKS_PER_YEAR, CAKE_POOL_PID } from \"config\";\r\nimport FlexLayout from \"components/layout/Flex\";\r\nimport Page from \"components/layout/Page\";\r\nimport Popup from \"components/Popup\";\r\nimport {\r\n  useFarms,\r\n  usePriceBnbBusd,\r\n  useFarmCakePerBlock,\r\n  usePriceCakeBusd,\r\n} from \"state/hooks\";\r\nimport useRefresh from \"hooks/useRefresh\";\r\nimport { fetchFarmUserDataAsync } from \"state/actions\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { orderBy } from \"lodash\";\r\nimport Heading from \"./Heading\";\r\nimport Nebula from \"./Nebula\";\r\n\r\nimport FarmCard, { FarmWithStakedValue } from \"./components/FarmCard/FarmCard\";\r\nimport Table from \"./components/FarmTable/FarmTable\";\r\nimport FarmTabButtons from \"./components/FarmTabButtons\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport { RowProps } from \"./components/FarmTable/Row\";\r\nimport ToggleView from \"./components/ToggleView/ToggleView\";\r\nimport { DesktopColumnSchema, ViewMode } from \"./components/types\";\r\nimport Select, { OptionProps } from \"./components/Select/Select\";\r\nimport Divider from \"../Pools/components/Divider\";\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  position: relative;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 85%;\r\n  padding: 18px 0 10px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  @media (min-width: 576px) {\r\n    flex-direction: row;\r\n    margin: 0;\r\n    max-width: none;\r\n    padding: 48px 0;\r\n  }\r\n  ul {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const farmsLP = useFarms();\r\n  const rewardPerBlock = useFarmCakePerBlock();\r\n  const cakePrice = usePriceCakeBusd();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const { account } = useWeb3React();\r\n\r\n  const dispatch = useDispatch();\r\n  const { fastRefresh } = useRefresh();\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account));\r\n    }\r\n  }, [account, dispatch, fastRefresh]);\r\n\r\n  const activeFarms = farmsLP;\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmWithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(\r\n        farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote ||\r\n          0,\r\n      );\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map(\r\n        (farm) => {\r\n          if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n            return farm;\r\n          }\r\n          // TODO change this. Cake per block comse from farm.,\r\n          const cakeRewardPerBlock = new BigNumber(rewardPerBlock).times(\r\n            farm.poolWeight,\r\n          );\r\n          const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\r\n\r\n          // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n          const lpTotalInQuoteToken = farm.lpTotalInQuoteToken;\r\n          \r\n          let apy = cakePriceVsBNB\r\n            .times(cakeRewardPerYear)\r\n            .div(lpTotalInQuoteToken);\r\n\r\n          if (\r\n            farm.quoteTokenSymbol === QuoteToken.BUSD ||\r\n            farm.quoteTokenSymbol === QuoteToken.UST\r\n          ) {\r\n            apy = cakePriceVsBNB\r\n              .times(cakeRewardPerYear)\r\n              .div(farm.lpTotalInQuoteToken)\r\n              .times(bnbPrice);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken);\r\n          } else if (farm.dual) {\r\n            const cakeApy =\r\n              farm &&\r\n              cakePriceVsBNB\r\n                .times(cakeRewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n            const dualApy =\r\n              farm.tokenPriceVsQuote &&\r\n              new BigNumber(farm.tokenPriceVsQuote)\r\n                .times(farm.dual.rewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n\r\n            apy = cakeApy && dualApy && cakeApy.plus(dualApy);\r\n          }\r\n\r\n          let liquidity = farm.lpTotalInQuoteToken;\r\n\r\n          if (!farm.lpTotalInQuoteToken) {\r\n            liquidity = null;\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n            liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            liquidity = cakePrice.times(farm.lpTotalInQuoteToken);\r\n          }\r\n\r\n          return { ...farm, apy, liquidity };\r\n        },\r\n      );\r\n\r\n      return farmsToDisplayWithAPY;\r\n    },\r\n    [bnbPrice, farmsLP, cakePrice, rewardPerBlock],\r\n  );\r\n\r\n  const farmsStaked = farmsList(activeFarms);\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    return (\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed={false}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed\r\n              />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nebula />\r\n      {/* <Popup/> */}\r\n      <Hero>\r\n        <div>\r\n          <Heading />\r\n          {/* <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            {TranslateString(999, \"Farms\")}\r\n          </Heading> */}\r\n          {/* <ul>\r\n            <li>\r\n              {TranslateString(\r\n                999,\r\n                \"Stake Liquidity Pool (LP) tokens to earn.\"\r\n              )}\r\n            </li>\r\n          </ul> */}\r\n        </div>\r\n      </Hero>\r\n      <Divider style={{ backgroundColor: \"#fff\" }} mb />\r\n      <Page style={{ position: \"relative\" }}>\r\n        {/* <Canvas/> */}\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleWrapper />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper />\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {/* <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Farms;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Page from \"components/layout/Page\";\nimport Farms from \"../Farms\";\n\nconst getTime = () => {\n  const now = new Date().getTime();\n  const timeout = new Date(\"july 31, 2021 11:00:00 GMT+00:00\").getTime();\n  const difference = timeout - now;\n  const sec = 1000;\n  const min = sec * 60;\n  const hr = min * 60;\n  const Day = hr * 24;\n  return { \n    timeLeft: difference > 0,\n    day: Math.floor(difference / Day),\n    hour: Math.floor((difference % Day) / hr),\n    min: Math.floor((difference % hr) / min),\n    sec: Math.floor((difference % min) / sec),\n  };\n};\n\nconst Container = styled(Page)`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n`;\nconst Text = styled.h1`\n  color: #fff;\n  font-size: 36px;\n  line-height: 1.2;\n  span {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\nconst TimeBlock = styled.span`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst TimeUnit = styled.span`\n  span {\n    display: block;\n  }\n  span:last-child {\n    font-size: 16px;\n  }\n`;\nfunction ComingSoon() {\n  const [time, setTIme] = useState(getTime());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTIme(getTime());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return (\n    <>\n      {time.timeLeft ? (\n        <Container>\n          <Text>\n            Farms open\n            <br /> 11:00 am, August 31st, 2021. (UTC)\n            <br />\n            <TimeBlock>\n              <TimeUnit>\n                <span>{time.day}</span>\n                <span>Day</span>\n              </TimeUnit>\n              <TimeUnit>\n                <span>{time.hour <= 9 ? `0${time.hour}` : time.hour}</span>\n                <span>Hour</span>\n              </TimeUnit>\n              <TimeUnit>\n                <span>{time.min <= 9 ? `0${time.min}` : time.min}</span>\n                <span>Minute</span>\n              </TimeUnit>\n              <TimeUnit>\n                <span>{time.sec <= 9 ? `0${time.sec}` : time.sec}</span>\n                <span>Second</span>\n              </TimeUnit>\n            </TimeBlock>\n          </Text>\n        </Container>\n      ) : (\n        <Farms />\n      )}\n    </>\n  );\n}\n\nexport default ComingSoon;\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n      .send({ from: account, gas: 200000 })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\r\n    .send({ from: account})\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_POOL_PID = 1\nexport const BASE_URL = 'https://babyfarm.netlify.app'\nexport const BASE_EXCHANGE_URL = 'https://www.xenonswap.org'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n"],"sourceRoot":""}