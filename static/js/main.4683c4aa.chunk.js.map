{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/getRpcUrl.ts","utils/web3React.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/nfts.ts","hooks/useRefresh.ts","utils/wallet.ts","hooks/useAuth.ts","config/constants/ifo.ts","state/block/index.ts","contexts/RefreshContext.tsx","utils/makeBatchRequest.ts","state/prices/index.ts","contexts/Localisation/translationsContext.ts","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/addressHelpers.ts","hooks/useI18n.ts","hooks/useContract.ts","config/constants/index.ts","utils/contractHelpers.ts","components/PageLoader.tsx","utils/multicall.ts","config/constants/types.ts","config/constants/contracts.ts","config/constants/pools.ts","hooks/useWeb3.ts","utils/web3.ts","config/constants/farms.ts","components/Menu/getPrice.ts","state/hooks.ts","state/teams/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/actions.ts","hooks/useEagerConnect.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/Nav.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/toasts/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAddress","getAddress","lpAddresses","calls","address","tokenAddresses","name","params","quoteTokenAdresses","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","BigNumberJS","toString","lpTokenRatio","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","poolWeight","toJSON","tokenPriceVsQuote","multiplier","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","BigNumber","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","_hex","fetchFarmUserEarnings","masterChef","getMasterchefContract","methods","pendingRewardToken","call","rawEarnings","console","log","parsedEarnings","earnings","initialState","rewardTokenPerBlock","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmPublicData","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmPublicDataAsync","farmContract","tokenToString","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","nodes","process","getNodeUrl","randomIndex","random","length","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","profileContract","getProfileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","id","merge","users","points","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","makeBatchRequest","teamData","onChainTeamData","Number","teams","description","images","lg","md","sm","alt","ipfs","background","textColor","Nfts","video","webm","mp4","sortOrder","bunnyId","blur","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","setupNetwork","window","ethereum","request","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","error","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","undefined","message","logout","getItem","close","ifos","isActive","subTitle","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","tokenSymbol","releaseBlockNumber","campaignId","blockSlice","blockNumber","setBlock","_","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","batch","getWeb3NoAccount","BatchRequest","promises","resolve","reject","add","err","result","execute","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","token","toLowerCase","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","defaultTranslationState","translations","setTranslations","TranslationsContext","campaigns","type","title","badge","campaignMap","Map","campaign","set","getAchievementTitle","fallback","getAchievementDescription","getUserPointIncreaseEvents","gql","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","getCakeAddress","addresses","cake","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","useI18n","translationId","foundTranslation","translation","stringId","text","includesVariable","includes","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","useCake","web3","useWeb3","useMemo","getCakeContract","useLottery","getLotteryContract","useMasterchef","useSousChef","getSouschefContract","communityFarms","filter","isCommunity","getContract","abi","web3NoAccount","eth","Contract","getBep20Contract","bep20Abi","getIfoContract","ifoAbi","config","poolsConfig","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getPointCenterIfoContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getClaimRefundContract","claimRefundAbi","Wrapper","styled","theme","colors","LoaderAnimation","keyframes","spin","spinReverse","SVG","primary","svg","PageLoader","version","xmlns","x","y","viewBox","enableBackground","fill","d","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","QuoteToken","syrup","busd","ust","pools","tokenName","tokenAddress","stakingTokenName","CAKE","stakingTokenAddress","CORE","projectLink","harvest","tokenPerBlock","isFinished","library","refEth","useRef","Web3","setweb3","current","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","lpSymbol","quoteTokenSymbol","BNB","contracts","X2P","useGetPriceData","setData","fetchData","binancecoin","usd","ZERO","useFetchPublicData","useDispatch","fetchPoolsPublicDataAsync","getBlockNumber","useFarms","useSelector","useFarmFromPid","useFarmCakePerBlock","useFarmFromSymbol","useFarmUser","usePriceBnbBusd","priceData","usePriceCakeBusd","usePriceX2PBusd","toast","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","useProfile","profile","isInitialized","hasRegistered","hasProfile","useFetchPriceList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","useEagerConnect","connectorId","connectorLocalStorageKey","useGetDocumentTitlePrice","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","e","langObject","setItem","ThemeContext","isDark","toggleTheme","modTheme","dark","secondary","borderColor","textSubtle","tertiary","failure","input","success","navBorder","shadows","focus","nav","card","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","useTheme","StyledThemeContext","Nav","InnerNav","NavElement","li","currentPage","Content","ul","CloseArea","CollapseContainer","open","CollapseContent","Logo","img","HamburgerContainer","Bar","Icon","NavBar","toggle","setToggle","location","useLocation","to","src","pathname","href","target","rel","onClick","Container","Footer","FooterContent","Menu","className","style","opacity","color","SuspenseWithChunkError","props","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","reload","this","Component","ToastListener","toasts","onRemove","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","checkClaimableStatus","canClaimMultiple","isBullClaimable","isHiccupClaimable","isSomeClaimable","values","some","status","createBrowserHistory","bullNft","nftList","nft","hiccupNft","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","renderNftPreview","height","width","marginBottom","ClaimBullHiccupNftModal","onDismiss","TranslateString","collectibleMessage","delay","flexDirection","alignItems","justifyContent","bold","fontSize","mb","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","useModal","onPresentGiftModal","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","warn","videoPlayed","setVideoPlayed","Global","path","exact","component","memo","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","pricesReducer","profileReducer","teamsReducer","achievementsReducer","block","blockReducer","Providers","store","ReactDOM","render","StrictMode","document","getElementById","toastsSlice","toastIndex","splice","unshift","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","rabbitContract","getUsername","ok","username","getProfile","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints"],"mappings":"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","file":"static/js/main.4683c4aa.chunk.js","sourcesContent":["import { BigNumber, formatFixed } from \"@ethersproject/bignumber\";\r\nimport BigNumberJS from \"bignumber.js\";\r\nimport erc20 from \"config/abi/erc20.json\";\r\nimport masterchefABI from \"config/abi/masterchef.json\";\r\nimport multicall from \"utils/multicall\";\r\nimport { getAddress, getMasterChefAddress } from \"utils/addressHelpers\";\r\nimport farmsConfig from \"config/constants/farms\";\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAddress = getAddress(farmConfig.lpAddresses);\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: getAddress(farmConfig.tokenAddresses),\r\n          name: \"balanceOf\",\r\n          params: [lpAddress],\r\n        },\r\n        // Balance of BNB token on LP contract\r\n        {\r\n          address: getAddress(farmConfig.quoteTokenAdresses),\r\n          name: \"balanceOf\",\r\n          params: [lpAddress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: lpAddress,\r\n          name: \"balanceOf\",\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAddress,\r\n          name: \"totalSupply\",\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: getAddress(farmConfig.tokenAddresses),\r\n          name: \"decimals\",\r\n        },\r\n        // BNB token decimals\r\n        {\r\n          address: getAddress(farmConfig.quoteTokenAdresses),\r\n          name: \"decimals\",\r\n        },\r\n      ];\r\n\r\n      let [\r\n        tokenBalanceLP,\r\n        quoteTokenBalanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls);\r\n      tokenBalanceLP = new BigNumberJS(tokenBalanceLP[0].toString());\r\n      quoteTokenBalanceLP = new BigNumberJS(quoteTokenBalanceLP[0].toString());\r\n      lpTokenBalanceMC = new BigNumberJS(lpTokenBalanceMC[0].toString());\r\n      lpTotalSupply = new BigNumberJS(lpTotalSupply[0].toString());\r\n      tokenDecimals = new BigNumberJS(tokenDecimals[0].toString());\r\n      quoteTokenDecimals = new BigNumberJS(quoteTokenDecimals[0].toString());\r\n\r\n      // TODO: Handle PID 0 (XPLAY variables)\r\n\r\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n      const lpTokenRatio = lpTokenBalanceMC.div(lpTotalSupply);\r\n\r\n      // Total value in staking in BNB token value\r\n      const lpTotalInQuoteToken = quoteTokenBalanceLP\r\n        .div(new BigNumberJS(10).pow(18))\r\n        .times(new BigNumberJS(2))\r\n        .times(lpTokenRatio);\r\n\r\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n      const tokenAmount = tokenBalanceLP\r\n        .div(new BigNumberJS(10).pow(tokenDecimals))\r\n        .times(lpTokenRatio);\r\n      const quoteTokenAmount = quoteTokenBalanceLP\r\n        .div(new BigNumberJS(10).pow(quoteTokenDecimals))\r\n        .times(lpTokenRatio);\r\n\r\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: \"poolInfo\",\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: \"totalAllocPoint\",\r\n        },\r\n      ]);\r\n      const allocPoint = new BigNumberJS(info.allocPoint.toString());\r\n\r\n      const poolWeight = allocPoint.div(\r\n        new BigNumberJS(totalAllocPoint[0].toString()),\r\n      );\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\r\n        poolWeight: poolWeight.toJSON(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        lpTokenBalanceMC: lpTokenBalanceMC\r\n          .div(new BigNumberJS(10).pow(quoteTokenDecimals))\r\n          .toJSON(),\r\n      };\r\n    }),\r\n  );\r\n  return data;\r\n};\r\n\r\nexport default fetchFarms;\r\n","import BigNumber from \"bignumber.js\";\r\nimport erc20ABI from \"config/abi/erc20.json\";\r\nimport masterchefABI from \"config/abi/masterchef.json\";\r\nimport multicall from \"utils/multicall\";\r\nimport farmsConfig from \"config/constants/farms\";\r\nimport { getAddress, getMasterChefAddress } from \"utils/addressHelpers\";\r\nimport { getMasterchefContract } from \"utils/contractHelpers\";\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress();\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses);\r\n    return {\r\n      address: lpContractAddress,\r\n      name: \"allowance\",\r\n      params: [account, masterChefAdress],\r\n    };\r\n  });\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls);\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON();\r\n  });\r\n  return parsedLpAllowances;\r\n};\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses);\r\n    return {\r\n      address: lpContractAddress,\r\n      name: \"balanceOf\",\r\n      params: [account],\r\n    };\r\n  });\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls);\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON();\r\n  });\r\n  return parsedTokenBalances;\r\n};\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress();\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: \"userInfo\",\r\n      params: [farm.pid, account],\r\n    };\r\n  });\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls);\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON();\r\n  });\r\n  return parsedStakedBalances;\r\n};\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress();\r\n  const masterChef = getMasterchefContract();\r\n  \r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return masterChef.methods\r\n    .pendingRewardToken(farm.pid, account)\r\n    .call()\r\n  });\r\n  const rawEarnings = await Promise.all(calls);\r\n  // try {\r\n  //   rawEarnings = await multicall(masterchefABI, calls);\r\n  // } catch (e) {\r\n  //   console.log(\"error getting raw earnings\");\r\n  // }\r\n  console.log(\"rawEarnings\", rawEarnings)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON();\r\n  });\r\n  return parsedEarnings;\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport farmsConfig from \"config/constants/farms\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport fetchFarms from \"./fetchFarms\";\r\n\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from \"./fetchFarmUser\";\r\nimport { FarmsState, Farm } from \"../types\";\r\n\r\nconst initialState: FarmsState = {\r\n  data: [...farmsConfig],\r\n  rewardTokenPerBlock: \"0\",\r\n};\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: \"Farms\",\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload;\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid);\r\n        return { ...farm, ...liveFarmData };\r\n      });\r\n    },\r\n    setFarmPublicData: (state, action) => {\r\n      const rewardTokenPerBlock: string = action.payload;\r\n      state.rewardTokenPerBlock = rewardTokenPerBlock;\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload;\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl;\r\n        state.data[index] = { ...state.data[index], userData: userDataEl };\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData, setFarmPublicData } =\r\n  farmsSlice.actions;\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms();\r\n\r\n  dispatch(setFarmsPublicData(farms));\r\n};\r\nexport const fetchFarmPublicDataAsync = (farmContract) => async (dispatch) => {\r\n  const rewardTokenPerBlock = await (\r\n    await farmContract?.methods.rewardTokenPerBlock.call()\r\n  ).call();\r\n  const tokenToString = new BigNumber(rewardTokenPerBlock)\r\n    .div(new BigNumber(10).pow(18))\r\n    .toString();\r\n  dispatch(setFarmPublicData(tokenToString));\r\n};\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  let userFarmAllowances;\r\n  let userFarmTokenBalances;\r\n  let userStakedBalances;\r\n  let userFarmEarnings;\r\n  try {\r\n    userFarmAllowances = await fetchFarmUserAllowances(account);\r\n  } catch (e) {\r\n    console.log(\"fetchFarmUserAllowances\", e);\r\n  }\r\n  try {\r\n    userFarmTokenBalances = await fetchFarmUserTokenBalances(account);\r\n  } catch (e) {\r\n    console.log(\"fetchFarmUserTokenBalances\", e);\r\n  }\r\n  try {\r\n    userStakedBalances = await fetchFarmUserStakedBalances(account);\r\n  } catch (e) {\r\n    console.log(\"fetchFarmUserStakedBalances\", e);\r\n  }\r\n  try {\r\n    userFarmEarnings = await fetchFarmUserEarnings(account);\r\n  } catch (e) {\r\n    console.log(\"fetchFarmUserEarnings\", e);\r\n  }\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map(\r\n    (farmAllowance, index) => {\r\n      return {\r\n        index,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      };\r\n    },\r\n  );\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }));\r\n};\r\n\r\nexport default farmsSlice.reducer;\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\n\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  qrcode: true,\r\n  chainId:56,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { TeamsById, TeamResponse } from 'state/types'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const {\r\n      0: teamName,\r\n      2: numberUsers,\r\n      3: numberPoints,\r\n      4: isJoinable,\r\n    } = await profileContract.methods.getTeamProfile(teamId).call()\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers,\r\n      points: numberPoints,\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.methods.numberTeams().call()\r\n    const calls = []\r\n\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push(profileContract.methods.getTeamProfile(i).call)\r\n    }\r\n\r\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: Number(numberUsers),\r\n          points: Number(numberPoints),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import { Nft } from './types'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { useToast } from 'state/hooks'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\n\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        console.log(\"connector is\", connector);\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem('connectorIdv2')\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(('Provider Error'), ('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                connector.walletConnectProvider = undefined\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(('Authorization Error'), ('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(('Unable to find connector'), ('The connector config is wrong'))\r\n      }\r\n    },\r\n    [activate, toastError],\r\n  )\r\n  const logout = useCallback(() => {\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem('connectorIdv2')\r\n  }, [deactivate])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import { Ifo } from './types'\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'belt',\r\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n    isActive: true,\r\n    name: 'Belt (BELT)',\r\n    subTitle: 'AMM protocol incorporating multi-strategy yield optimization',\r\n    description:\r\n      'Belt.fi is a protocol that allows users to retain the stability of their asset positions and get maximum yields with minimal risk, including automated vault compounding and yield optimization strategies. BELT is the governance and incentivization token of Belt Finance. BELT will be distributed to all types of pools.',\r\n    launchDate: 'Mar. 10',\r\n    launchTime: '5PM SGT',\r\n    saleAmount: '150,000 BELT',\r\n    raiseAmount: '$3,000,000',\r\n    cakeToBurn: '$1,500,000',\r\n    projectSiteUrl: 'https://beta.belt.fi/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'BELT',\r\n    releaseBlockNumber: 5493919,\r\n    campaignId: '511080000',\r\n  },\r\n  {\r\n    id: 'watch',\r\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n    isActive: false,\r\n    name: 'Yieldwatch (WATCH)',\r\n    subTitle: 'A smart yield farming dashboard on BSC',\r\n    description:\r\n      'Yieldwatch is a smart yield farming dashboard on Binance Smart Chain that lets you monitor your liquidity pools, yield farming and token staking performance with fast and casual UI. The $WATCH token is a membership token, which is required to access advanced PRO features.',\r\n    launchDate: 'Mar. 4',\r\n    launchTime: '5PM SGT',\r\n    saleAmount: '8,000,000 WATCH',\r\n    raiseAmount: '$800,000',\r\n    cakeToBurn: '$400,000',\r\n    projectSiteUrl: 'https://yieldwatch.net/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'WATCH',\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n  },\r\n  {\r\n    id: 'berry',\r\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n    isActive: false,\r\n    name: 'Berry (BRY)',\r\n    subTitle: 'A decentralized oracle network on BSC',\r\n    description:\r\n      'Berry Data is a transparent community-veriﬁed price oracle on BSC. Berry Data provides a trustless and decentralized alternative for off-chain data. As the governance token for Berry Data, BRY allows holders to pay for Berry Data feeds, vote on governance issues, validate data through staking, and build the Berry ecosystem.',\r\n    launchDate: 'Feb. 16',\r\n    launchTime: '5PM SGT',\r\n    saleAmount: '2,000,000 BRY',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://berrydata.co/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'BRY',\r\n    releaseBlockNumber: 4750968,\r\n    campaignId: '511060000',\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: false,\r\n    name: 'Soteria (wSOTE)',\r\n    subTitle: 'A blockchain based mutual to share the risk of DeFi on Binance Smart Chain',\r\n    description:\r\n      'Soteria allows users to buy insurance cover to greatly diminish or reduce the financial risk of hacks. It replaces the idea of a traditional insurance company, because it is wholly owned by the members. The model encourages engagement as members receive economic incentives for participating in Risk Assessment, Claims Assessment and Governance.',\r\n    launchDate: 'Jan. 21',\r\n    launchTime: '4PM SGT',\r\n    saleAmount: '1,500,000 wSOTE',\r\n    raiseAmount: '$525,000',\r\n    cakeToBurn: '$262,500',\r\n    projectSiteUrl: 'https://soteria.finance/#/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'wSOTE',\r\n    releaseBlockNumber: 4086064,\r\n    campaignId: '511050000',\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    subTitle: 'Crypto-assets insurance trading platform',\r\n    description:\r\n      'Helmet is a peer-to-peer insurance protocol written with options trading logic, which allows anyone to create any insurance policy easily in the market. Helmet aims to enable DeFi users to be protected against the risk of price fluctuations by providing price-shield insurance for BSC assets. They provide suppliers with a range of insurance types to sell, giving a variety of hedging strategies to the market.',\r\n    launchDate: 'Jan. 13',\r\n    launchTime: '5PM SGT',\r\n    saleAmount: '10,000,000 Helmet',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://www.helmet.insure/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'Helmet',\r\n    releaseBlockNumber: 3771926,\r\n    campaignId: '511040000',\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    subTitle: 'Cross-chain Automated Market Maker',\r\n    description:\r\n      'Tenet is a cross-chain Automated Market Maker (AMM) connector that provides a decentralized Liquidity Tap for various tokens. The Liquidity Tap is the powerhouse of the Liquidity Pool, employing a dynamic algorithm to give the Liquidity Provider fairer, more efficient, and richer incentives. Tenet aims to build a cross-chain and cross-platform toolkit protocol that allows the demand side to customize the parameters of the liquidity tap, allowing them to reach out to more liquidity participants effectively and with relative ease.',\r\n    launchDate: 'Jan. 5',\r\n    launchTime: '3PM SGT',\r\n    saleAmount: '1,000,000 TEN',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://www.tenet.farm/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'TEN',\r\n    releaseBlockNumber: 3483883,\r\n    campaignId: '511030000',\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    subTitle: 'Next-gen elastic supply token',\r\n    description:\r\n      'Ditto is the first elastic supply token on the Binance Smart Chain. Its goal is to maintain a stable price of $1, where its supply will adapt to changes in demand. All supply changes will apply equally to every wallet holding Ditto, and holders should always have the same % of the total supply',\r\n    launchDate: 'Dec. 23',\r\n    launchTime: '3PM SGT',\r\n    saleAmount: '700,000 DITTO',\r\n    raiseAmount: '$630,000',\r\n    cakeToBurn: '$315,000',\r\n    projectSiteUrl: 'https://ditto.money/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 9,\r\n    tokenSymbol: 'DITTO',\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511020000',\r\n  },\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    subTitle: 'Online games on BSC',\r\n    description:\r\n      'BLINk enables BNB holders to enjoy gaming experiences that WINk users on Tron have been enjoying for over two years.',\r\n    launchDate: 'Nov. 20',\r\n    launchTime: '9PM SGT',\r\n    saleAmount: '100,000,000 BLINK',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://blink.wink.org',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 6,\r\n    tokenSymbol: 'blink',\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511010000',\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Block } from '../types'\r\n\r\nconst initialState: Block = { blockNumber: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { getWeb3NoAccount } from './web3'\r\n\r\n/**\r\n * Accepts an array of contract method calls and batches them\r\n *\r\n * Example:\r\n *\r\n * [\r\n *  contract.method.balanceOf().call,\r\n *  contract.method.startBlockNumber().call\r\n * ]\r\n */\r\nconst makeBatchRequest = (calls: any[]) => {\r\n  try {\r\n    const web3 = getWeb3NoAccount()\r\n    const batch = new web3.BatchRequest()\r\n\r\n    const promises = calls.map((call) => {\r\n      return new Promise((resolve, reject) => {\r\n        batch.add(\r\n          call.request({}, (err, result) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(result)\r\n            }\r\n          }),\r\n        )\r\n      })\r\n    })\r\n\r\n    batch.execute()\r\n\r\n    return Promise.all(promises)\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeBatchRequest\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\n// TODO : Change this to do the smart contract price calculation.\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { Campaign } from 'config/constants/types'\r\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport makeBatchRequest from './makeBatchRequest'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: string\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `IFO Shopper: ${campaign.title}`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligble to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\r\n  const pointCenterContract = getPointCenterIfoContract()\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatuses = (await pointCenterContract.methods\r\n    .checkClaimStatuses(account, ifoCampaignAddresses)\r\n    .call()) as boolean[]\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await makeBatchRequest(\r\n    claimStatuses.reduce((accum, claimStatus, index) => {\r\n      if (claimStatus === true) {\r\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(claimableIfoDataItem.numberPoints),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const data = await request(\r\n      profileSubgraphApi,\r\n      gql`\r\n        {\r\n          user(id: \"${account.toLowerCase()}\") {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    )\r\n    return data.user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { kebabCase } from 'lodash'\r\nimport { push } from 'state/toasts'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data.concat(action.payload)\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n    const title = 'Error fetching achievements'\r\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const mainNetChainId = 56\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(addresses.cake)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.mulltiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(addresses.wbnb)\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return getAddress(addresses.lottery)\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return getAddress(addresses.lotteryNFT)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryAddress,\r\n  getLotteryTicketAddress,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoAbi from 'config/abi/ifo.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getIfoContract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoAbi, address, web3)\r\n}\r\nexport const getSouschefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getPointCenterIfoContract = (web3?: Web3) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getProfileContract = (web3?: Web3) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\r\n}\r\nexport const getPancakeRabbitContract = (web3?: Web3) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\r\n}\r\nexport const getBunnyFactoryContract = (web3?: Web3) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\r\n}\r\nexport const getBunnySpecialContract = (web3?: Web3) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\r\n}\r\nexport const getLotteryContract = (web3?: Web3) => {\r\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\r\n}\r\nexport const getLotteryTicketContract = (web3?: Web3) => {\r\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\r\n}\r\nexport const getMasterchefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getClaimRefundContract = (web3?: Web3) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\r\n}\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Page from \"./layout/Page\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 1000;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  overflow:hidden;\r\n`;\r\n\r\nconst LoaderAnimation = keyframes`\r\n{\r\n  0% {\r\n    transform: translate(-50%,-50%) scale(0.1);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: translate(-50%,-50%) scale(1.2);\r\n    opacity: 0;\r\n  }\r\n\r\n`;\r\nconst spin = keyframes`\r\n  from{\r\n    transform:rotate(0deg)\r\n  }\r\n  to{\r\n    transform:rotate(360deg)\r\n  }\r\n`\r\nconst spinReverse = keyframes`\r\n  from{\r\n    transform:rotate(360deg)\r\n  }\r\n  to{\r\n    transform:rotate(0deg)\r\n  }\r\n`\r\nconst Loader = styled.div`\r\n  width: calc(3.23625vw + 150.86408px);\r\n  height: calc(3.23625vw + 150.86408px);\r\n  position: absolute;\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  display: block;\r\n  border-radius: 50%;\r\n  z-index: 999;\r\n  animation: ${LoaderAnimation} 1.5s ease-out infinite 0s;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transform-origin: center;\r\n`;\r\nconst SVG = styled.svg`\r\n  z-index: 1000;\r\n  width: calc(3.23625vw + 50.86408px);\r\n  height: calc(3.23625vw + 50.86408px);\r\n   path:first-child{\r\n    animation: ${spin} 2s linear infinite;\r\n    transform-origin: center;\r\n   }\r\n   path:nth-child(2){\r\n    animation: ${spinReverse} 2s linear infinite;\r\n    transform-origin: center;\r\n   }\r\n   path:nth-child(3){\r\n    animation: ${spin} 2s linear infinite;\r\n    transform-origin: center;\r\n   }\r\n`;\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SVG\r\n        version=\"1.1\"\r\n        id=\"L7\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 100 100\"\r\n        enableBackground=\"new 0 0 100 100\"\r\n      >\r\n        <path\r\n          fill=\"#fff\"\r\n          d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\r\n  c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\"\r\n        />\r\n        <path\r\n          fill=\"#fff\"\r\n          d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\r\n  c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\"\r\n        />\r\n         \r\n        <path\r\n          fill=\"#fff\"\r\n          d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\r\n  L82,35.7z\"\r\n        />\r\n         \r\n      </SVG>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { TranslatableText } from \"state/types\";\r\n\r\nexport type IfoStatus = \"idle\" | \"coming_soon\" | \"live\" | \"finished\";\r\n\r\nexport interface Ifo {\r\n  id: string;\r\n  isActive: boolean;\r\n  address: string;\r\n  name: string;\r\n  subTitle?: string;\r\n  description?: string;\r\n  launchDate: string;\r\n  launchTime: string;\r\n  saleAmount: string;\r\n  raiseAmount: string;\r\n  cakeToBurn: string;\r\n  projectSiteUrl: string;\r\n  currency: string;\r\n  currencyAddress: string;\r\n  tokenDecimals: number;\r\n  tokenSymbol: string;\r\n  releaseBlockNumber: number;\r\n  campaignId?: string;\r\n}\r\n\r\nexport enum QuoteToken {\r\n  \"BNB\" = \"BNB\",\r\n  \"CAKE\" = \"XPLAY\",\r\n  \"X2P\" = \"X2P\",\r\n  \"SYRUP\" = \"SYRUP\",\r\n  \"BUSD\" = \"BUSD\",\r\n  \"TWT\" = \"TWT\",\r\n  \"UST\" = \"UST\",\r\n  \"ETH\" = \"ETH\",\r\n  \"COMP\" = \"COMP\",\r\n  \"SUSHI\" = \"SUSHI\",\r\n  \"TPT\" = \"TPT\",\r\n}\r\n\r\nexport enum PoolCategory {\r\n  \"COMMUNITY\" = \"Community\",\r\n  \"CORE\" = \"Core\",\r\n  \"BINANCE\" = \"Binance\", // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string;\r\n  56: string;\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number;\r\n  lpSymbol: string;\r\n  lpAddresses: Address;\r\n  tokenSymbol: string;\r\n  tokenAddresses: Address;\r\n  quoteTokenSymbol: QuoteToken;\r\n  quoteTokenAdresses: Address;\r\n  multiplier?: string;\r\n  isCommunity?: boolean;\r\n  dual?: {\r\n    rewardPerBlock: number;\r\n    earnLabel: string;\r\n    endBlock: number;\r\n  };\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number;\r\n  tokenName: string;\r\n  tokenAddress: string;\r\n  stakingTokenName: QuoteToken;\r\n  stakingLimit?: number;\r\n  stakingTokenAddress?: string;\r\n  stakingTokenDecimals?: number;\r\n  contractAddress: Address;\r\n  poolCategory: PoolCategory;\r\n  projectLink: string;\r\n  tokenPerBlock: string;\r\n  sortOrder?: number;\r\n  harvest?: boolean;\r\n  isFinished?: boolean;\r\n  tokenDecimals: number;\r\n}\r\n\r\nexport type Images = {\r\n  lg: string;\r\n  md: string;\r\n  sm: string;\r\n  ipfs?: string;\r\n};\r\n\r\nexport type NftImages = {\r\n  blur?: string;\r\n} & Images;\r\n\r\nexport type NftVideo = {\r\n  webm: string;\r\n  mp4: string;\r\n};\r\n\r\nexport type Nft = {\r\n  name: string;\r\n  description: string;\r\n  images: NftImages;\r\n  sortOrder: number;\r\n  bunnyId: number;\r\n  video?: NftVideo;\r\n};\r\n\r\nexport type TeamImages = {\r\n  alt: string;\r\n} & Images;\r\n\r\nexport type Team = {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  isJoinable?: boolean;\r\n  users: number;\r\n  points: number;\r\n  images: TeamImages;\r\n  background: string;\r\n  textColor: string;\r\n};\r\n\r\nexport type CampaignType = \"ifo\";\r\n\r\nexport type Campaign = {\r\n  id: string;\r\n  type: CampaignType;\r\n  title?: TranslatableText;\r\n  description?: TranslatableText;\r\n  badge?: string;\r\n};\r\n","export default {\r\n  cake: {\r\n    97: '',\r\n    56: '0xB7FeEAb5ea787e83a40f185237C717597363E0d6', // made this XPLAY\r\n  },\r\n  syrup: {\r\n    97: '',\r\n    56: '0x85346d658909d93f31a232f60fc45454919d79dc', // changed to syrup contract in below masterchef contract\r\n  },\r\n  masterChef: {\r\n    97: '',\r\n    56: '0x33038334F54E97A8beb276BD528f0e6E55c1861D', // changed to masterchef for XPLAY\r\n  },\r\n  sousChef: {\r\n    97: '',\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',   \r\n  },\r\n  wbnb: {\r\n    97: '',\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n  },\r\n  lottery: {\r\n    97: '',\r\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\r\n  },\r\n  lotteryNFT: {\r\n    97: '',\r\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    97: '',\r\n  },\r\n  ust: {\r\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n    97: '',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '',\r\n  },\r\n  eth: {\r\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    97: '',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '',\r\n  },\r\n}\r\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    tokenName: 'BX2P',\r\n    tokenAddress: '0x8A4b6747F922515ff0c4C910747247cF7e5e9801',   // token address\r\n    stakingTokenName: QuoteToken.CAKE,\r\n    stakingTokenAddress: '0x8A4b6747F922515ff0c4C910747247cF7e5e9801',  // token address\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x083d5710213ed4772b6E56AcE2611BC65A8Cf5f0',  /// masterchef address\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: '/',\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n  },\r\n \r\n]\r\n\r\nexport default pools\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport default web3NoAccount\r\n","import contracts from \"./contracts\";\r\nimport { FarmConfig, QuoteToken } from \"./types\";\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    lpSymbol: \"XPLAY\",\r\n    lpAddresses: {\r\n      97: \"\",\r\n      56: \"0xB7FeEAb5ea787e83a40f185237C717597363E0d6\", // XPLAY token address\r\n    },\r\n    tokenSymbol: \"XPLAY\",\r\n    tokenAddresses: {\r\n      97: \"\",\r\n      56: \"0xB7FeEAb5ea787e83a40f185237C717597363E0d6\", // XPLAY syrup token\r\n    },\r\n    quoteTokenSymbol: QuoteToken.CAKE,\r\n    quoteTokenAdresses: {\r\n      97: \"\",\r\n      56: \"0xB7FeEAb5ea787e83a40f185237C717597363E0d6\", // XPLAY syrup token\r\n    },\r\n  },\r\n\r\n  {\r\n    pid: 1,\r\n    lpSymbol: \"XPLAY-BNB LP\",\r\n    lpAddresses: {\r\n      97: \"\",\r\n      56: \"0xB4E34e0f46a8AacEB7237cCEF41ef565FD3E81FD\", // lp address XPLAY-bnb\r\n    },\r\n    tokenSymbol: \"XPLAY\",\r\n    tokenAddresses: {\r\n      97: \"\",\r\n      56: \"0xB7FeEAb5ea787e83a40f185237C717597363E0d6\", // XPLAY token address\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'X2P-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2db359Bd40f7547236fE0264344450AB7fB47689',   // lp address x2p-bnb\r\n    },\r\n    tokenSymbol: 'X2P',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xdfd85305A752d70A07A995Fa724Ac4Ff787EBef2', // X2P token address\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'X2P',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdfd85305A752d70A07A995Fa724Ac4Ff787EBef2',   // lp address x2p-bnb\r\n    },\r\n    tokenSymbol: 'X2P',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xdfd85305A752d70A07A995Fa724Ac4Ff787EBef2', // X2P token address\r\n    },\r\n    quoteTokenSymbol: QuoteToken.X2P,\r\n    quoteTokenAdresses: {\r\n      97: \"\",\r\n      56: \"0xdfd85305A752d70A07A995Fa724Ac4Ff787EBef2\", // XPLAY syrup token\r\n    },\r\n  },\r\n];\r\n\r\nexport default farms;\r\n","import { useEffect, useState } from 'react'\n\ntype ApiResponse = {\n  prices: {\n    [key: string]: string\n  }\n}\n\n/**\n * Due to Cors the api was forked and a proxy was created\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\n */\nconst api = 'https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd'\n\nconst useGetPriceData = () => {\n  const [data, setData] = useState<ApiResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(api)\n        // get bnb price    \n        const res: ApiResponse = await response.json()      /// => res.binancecoin.usd\n        // @ts-ignore\n        setData(res.binancecoin.usd)\n      } catch (error) {\n        console.error('Unable to fetch price data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n\nexport default useGetPriceData\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { kebabCase } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Team } from 'config/constants/types'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { useMasterchef } from \"hooks/useContract\";\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchFarmPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast,\r\n  setBlock,\r\n} from './actions'\r\nimport { State, Farm, Pool, Block, ProfileState, TeamsState, AchievementState, PriceState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchPrices } from './prices'\r\nimport useGetPriceData from '../components/Menu/getPrice'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const farmContract = useMasterchef();\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchFarmPublicDataAsync(farmContract))\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh, farmContract])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmCakePerBlock = (): string => {\r\n  const cakePerBlock = useSelector((state: State) => state.farms.rewardTokenPerBlock)\r\n  return cakePerBlock\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  // const pid = 2 // BUSD-BNB LP\r\n  // @ts-ignore\r\n  const priceData = useGetPriceData()\r\n  // @ts-ignore\r\n  const priceData2 = new BigNumber(priceData)\r\n\r\n  return priceData2;\r\n\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  // const pid = 1 // XPLAY-BNB LP\r\n  const pid = 1;\r\n  let priceData = useGetPriceData()\r\n  // @ts-ignore  \r\n  priceData = new BigNumber(priceData)\r\n  const farm = useFarmFromPid(pid)\r\n  //  @ts-ignore\r\n  const CakeUSD = farm.tokenPriceVsQuote ? priceData.times(farm.tokenPriceVsQuote) : ZERO\r\n  return CakeUSD\r\n}\r\n\r\nexport const usePriceX2PBusd = (): BigNumber => {\r\n  // const pid = 1 // XPLAY-BNB LP\r\n  const pid = 2;\r\n  let priceData = useGetPriceData()\r\n  // @ts-ignore  \r\n  priceData = new BigNumber(priceData)\r\n  const farm = useFarmFromPid(pid)\r\n  //  @ts-ignore\r\n  const x2pUsd = farm.tokenPriceVsQuote ? priceData.times(farm.tokenPriceVsQuote) : ZERO\r\n  return x2pUsd\r\n}\r\n\r\n\r\n// Toasts\r\nexport const useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  return prices[token.toLowerCase()]\r\n}\r\n\r\n// Block\r\nexport const useBlock = (): Block => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3NoAccount()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingRewardToken('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","export {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchFarmPublicDataAsync,\r\n  fetchFarmUserDataAsync,\r\n} from \"./farms\";\r\nexport { clear, remove, push } from \"./toasts\";\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from \"./pools\";\r\nexport {\r\n  profileFetchStart,\r\n  profileFetchSucceeded,\r\n  profileFetchFailed,\r\n} from \"./profile\";\r\nexport {\r\n  fetchStart,\r\n  teamFetchSucceeded,\r\n  fetchFailed,\r\n  teamsFetchSucceeded,\r\n} from \"./teams\";\r\nexport { setBlock } from \"./block\";\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  // const cakePriceUsd = usePriceCakeBusd()\r\n  // useEffect(() => {\r\n  //   console.log(\"title\", cakePriceUsd.toString())\r\n  // })\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import { createGlobalStyle } from \"styled-components\";\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from \"@pancakeswap-libs/uikit/dist/theme\";\r\n\r\ndeclare module \"styled-components\" {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background: #00113c;\r\n    /* background: #00113c; */\r\n    /* background: ${({ theme }) => theme.colors.background}; */\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  AR,\r\n  CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  CS,\r\n  DA,\r\n  DE,\r\n  NL,\r\n  FIL,\r\n  FI,\r\n  FR,\r\n  EL,\r\n  HI,\r\n  HU,\r\n  ID,\r\n  IT,\r\n  JA,\r\n  KO,\r\n  PTBR,\r\n  RO,\r\n  RU,\r\n  SR,\r\n  ESES,\r\n  SVSE,\r\n  TA,\r\n  TR,\r\n  UK,\r\n  VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations([])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          setTranslations([])\r\n          console.error('Error while loading translations', e)\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from \"react\";\r\nimport { ThemeProvider as SCThemeProvider } from \"styled-components\";\r\nimport { light, dark } from \"@pancakeswap-libs/uikit\";\r\n\r\nconst CACHE_KEY = \"IS_DARK\";\r\n\r\nexport interface ThemeContextType {\r\n  isDark: boolean;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = React.createContext<ThemeContextType>({\r\n  isDark: false,\r\n  toggleTheme: () => null,\r\n});\r\nconst modTheme = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    primary: \"#1da2e7\",\r\n    secondary: \"#1da2e7\",\r\n    borderColor: \"#1da2e7\",\r\n    background:\r\n      \"#050d2c\",\r\n    textSubtle: \"#1da2e7\",\r\n    text: \"#fff\",\r\n    tertiary: \"#6c449c\",\r\n    failure: \"#ab3f3d\",\r\n    input: \"#000000b3\",\r\n    success: \"#1da2e7\",\r\n    navBorder: \"#1da2e7\",\r\n  },\r\n  shadows: {\r\n    ...dark.shadows,\r\n    focus: \"0px 0px 0px 1px #1da2e7, 0px 0px 0px 4px #1da2e799;\",\r\n  },\r\n  nav: {\r\n    ...dark.nav,\r\n    background: \"#1da2e7\",\r\n  },\r\n  // tooltip:{\r\n  //   ...dark.tooltip,\r\n  //   background:'red'\r\n  // }\r\n  card: { ...dark.card, background: \"#1da2e7\" },\r\n};\r\n\r\nconst ThemeContextProvider: React.FC = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY);\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false;\r\n  });\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState: any) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState));\r\n      return !prevState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={modTheme}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ThemeContext, ThemeContextProvider };\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Nav = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(5px);\n  // background: ${({ theme }) => theme.nav.background};\n  height: 80px;\n  z-index: 10;\n  border-bottom: 0.1rem ${({ theme }) => theme.colors.borderColor} solid;\n`;\n\nconst InnerNav = styled.div`\n  width: 90%;\n  height: 100%;\n  position: relative;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 10;\n`;\nconst NavElement = styled.li<{ currentPage: boolean }>`\n  position: relative;\n  font-size: 16px;\n  font-weight: 800;\n  color: ${({ theme, currentPage }) =>\n    currentPage ? theme.colors.borderColor : \"white\"};\n  display: inline-block;\n  cursor: pointer;\n  text-transform: capitalize;\n  text-align: center;\n  transition: transform 0.3s ease-out;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.borderColor};\n  }\n`;\nconst Content = styled.ul`\n  flex: 6;\n  list-style: none;\n  display: none;\n  margin: 0;\n  justify-content: space-around;\n  align-items: center;\n  padding: 0 0 0 0;\n  flex-direction: row;\n\n  @media only screen and (min-width: 700px) {\n    display: flex;\n  }\n`;\nconst CloseArea = styled.div`\n  height: 100%;\n  width: 100%;\n`;\nconst CollapseContainer = styled.div<{ open: boolean }>`\n  display: flex;\n  transform: translate3d(${({ open }) => (open ? 0 : -150)}%, 0, 0);\n  transition: 0.3s ease;\n  z-index: 10;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n`;\nconst CollapseContent = styled.ul`\n  list-style: none;\n  display: flex;\n  height: 100%;\n  width: 260px;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 2rem 0;\n  z-index: 9;\n\n  border-bottom: 0.1rem ${({ theme }) => theme.colors.borderColor} solid;\n  background: #171a40;\n  // backdrop-filter: blur(5px);\n\n  z-index: 10;\n  & > ${NavElement} {\n    padding: 1rem 0;\n    width: 100%;\n    border-bottom: 1px solid white;\n  }\n\n  @media only screen and (min-width: 700px) {\n    display: none;\n  }\n`;\n\nconst Logo = styled.img`\n  flex: 1;\n  height: 5rem;\n  z-index: 5;\n`;\nconst HamburgerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  z-index: 11;\n  @media only screen and (min-width: 700px) {\n    display: none;\n  }\n`;\nconst Bar = styled.div`\n  height: 3px;\n  width: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 10;\n`;\nconst Icon = styled.div<{ open: boolean }>`\n  cursor: pointer;\n  display: block;\n  height: 30px;\n  width: 35px;\n  padding: 0 5px;\n  transition: 0.1s ease;\n  z-index: 1;\n\n  &:hover {\n    transition: 0.1s ease;\n    padding: 0 2px;\n  }\n  & > ${Bar} {\n    transition: 0.3s ease;\n  }\n  & > ${Bar}:nth-child(1) {\n    transform: ${({ open }) =>\n      open ? `translateY(14px) rotate(-45deg)` : `translateY(8px)`};\n  }\n  & > ${Bar}:nth-child(2) {\n    opacity: ${({ open }) => (open ? `0` : `1`)};\n    transform: translateY(12px);\n  }\n  & > ${Bar}:nth-child(3) {\n    transform: ${({ open }) =>\n      open ? `translateY(8px) rotate(45deg)` : `translateY(16px)`};\n  }\n\n  height: 30px;\n  width: 35px;\n`;\n\nfunction NavBar() {\n  const [toggle, setToggle] = useState(false);\n  const location = useLocation();\n  return (\n    <Nav>\n      <InnerNav>\n        <Link to=\"/\">\n          <Logo src=\"/logo.png\" alt=\"Logo\" />\n        </Link>\n\n        <Content>\n          <NavElement currentPage={location.pathname === \"/\"}>\n            <Link to=\"/\">Home</Link>\n          </NavElement>\n          <NavElement currentPage={location.pathname === \"/farms\"}>\n            <Link to=\"/farms\">X-Machine</Link>\n          </NavElement>\n          <NavElement currentPage={false}>\n            <a href=\"https://www.xenonswap.org/#/swap?outputCurrency=0xdfd85305a752d70a07a995fa724ac4ff787ebef2\">\n              exchange\n            </a>\n          </NavElement>\n          <NavElement currentPage={false}>\n            <a href=\"https://xenonpay.org/\">website</a>\n          </NavElement>\n          <NavElement currentPage={false}>\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              href=\"/GuideToStaking.pdf\"\n            >\n              Eco System Guide\n            </a>\n          </NavElement>\n        </Content>\n        <HamburgerContainer onClick={() => setToggle(!toggle)}>\n          <Icon open={toggle}>\n            <Bar />\n            <Bar />\n            <Bar />\n          </Icon>\n        </HamburgerContainer>\n      </InnerNav>\n      <CollapseContainer open={toggle}>\n        <CollapseContent>\n          <NavElement currentPage={location.pathname === \"/\"}>\n            <Link to=\"/\">Home</Link>\n          </NavElement>\n          <NavElement currentPage={location.pathname === \"/farms\"}>\n            <Link to=\"/farms\">X-Machine</Link>\n          </NavElement>\n          <NavElement currentPage={false}>\n            <a href=\"https://www.xenonswap.org/#/swap?outputCurrency=0xdfd85305a752d70a07a995fa724ac4ff787ebef2\">\n              exchange\n            </a>\n          </NavElement>\n          <NavElement currentPage={false}>\n            <a href=\"https://xenonpay.org/\">website</a>\n          </NavElement>\n          <NavElement currentPage={false}>\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              href=\"/GuideToStaking.pdf\"\n            >\n              Eco System Guide\n            </a>\n          </NavElement>\n        </CollapseContent>\n        <CloseArea onClick={() => setToggle(false)} />\n      </CollapseContainer>\n    </Nav>\n  );\n}\n\nexport default NavBar;\n","import React, { useContext, Suspense } from \"react\";\r\nimport { Menu as UikitMenu } from \"@pancakeswap-libs/uikit\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { allLanguages } from \"config/localisation/languageCodes\";\r\nimport { LanguageContext } from \"contexts/Localisation/languageContext\";\r\nimport useTheme from \"hooks/useTheme\";\r\nimport useAuth from \"hooks/useAuth\";\r\nimport Landing from \"components/custom/Landing\";\r\nimport { usePriceCakeBusd, useProfile } from \"state/hooks\";\r\nimport styled from \"styled-components\";\r\nimport Nav from \"./Nav\";\r\nimport Nebula from \"./Nebula\";\r\nimport config from \"./config\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 80px;\r\n  padding: 0;\r\n`;\r\nconst Loading = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 5;\r\n  color: #fff;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 14px 0;\r\n  background-color: rgba(1, 1, 1, 0.4);\r\n  border-top: 1px solid darkgrey;\r\n`;\r\n\r\nconst FooterContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  color: white;\r\n  margin: auto;\r\n`;\r\n\r\nconst Menu = ({ children }) => {\r\n  const { account } = useWeb3React();\r\n  const { login, logout } = useAuth();\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext);\r\n  const { isDark, toggleTheme } = useTheme();\r\n  const cakePriceUsd = usePriceCakeBusd();\r\n  const { profile } = useProfile();\r\n  return (\r\n    <Container>\r\n      <Nav />\r\n      {/* <Suspense fallback={<Loading>Setting things up...</Loading>}>\r\n   \r\n      </Suspense>\r\n      <Landing/> */}\r\n      {children}\r\n      <Footer>\r\n        <FooterContent className=\"container\" style={{ opacity: 0.25 }}>\r\n          <div>\r\n            This DEx was built with ❤ by the wizards at{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              href=\"https://highstack.co\"\r\n              style={{ color: \"#add8e6\" }}\r\n            >\r\n              Highstack.co\r\n            </a>\r\n          </div>\r\n        </FooterContent>\r\n      </Footer>\r\n    </Container>\r\n    // <UikitMenu\r\n    //   account={account}\r\n    //   login={login}\r\n    //   logout={logout}\r\n    //   isDark={isDark}\r\n    //   toggleTheme={toggleTheme}\r\n    //   currentLang={selectedLanguage && selectedLanguage.code}\r\n    //   langs={allLanguages}\r\n    //   setLang={setSelectedLanguage}\r\n    //   cakePriceUsd={cakePriceUsd.toNumber()}\r\n    //   links={config}\r\n    //   // profile={{\r\n    //   //   username: profile?.username,\r\n    //   //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n    //   //   profileLink: '/profile',\r\n    //   //   noProfileLink: '/profile',\r\n    //   //   showPip: !profile?.username,\r\n    //   // }}\r\n    //   {...props}\r\n    // />\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ToastContainer, Toast } from '@pancakeswap-libs/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { State } from 'state/types'\r\n\r\nconst ToastListener = () => {\r\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\r\n  const { remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\r\n\r\nexport const BULL_NFT = 11\r\nexport const HICCUP_NFT = 10\r\n\r\nconst bunnySpecialContract = getBunnySpecialContract()\r\n\r\nconst useGetBullHiccupClaimableStatus = () => {\r\n  const [hasChecked, setHasChecked] = useState(false)\r\n  const [claimables, setClaimables] = useState({\r\n    [BULL_NFT]: false,\r\n    [HICCUP_NFT]: false,\r\n  })\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const checkClaimableStatus = async () => {\r\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\r\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\r\n        .call()) as boolean[]\r\n\r\n      setClaimables({\r\n        [BULL_NFT]: isBullClaimable,\r\n        [HICCUP_NFT]: isHiccupClaimable,\r\n      })\r\n      setHasChecked(true)\r\n    }\r\n\r\n    if (account) {\r\n      checkClaimableStatus()\r\n    }\r\n  }, [account, setClaimables, setHasChecked])\r\n\r\n  return {\r\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\r\n    isBullClaimable: claimables[BULL_NFT],\r\n    isHiccupClaimable: claimables[HICCUP_NFT],\r\n    hasChecked,\r\n  }\r\n}\r\n\r\nexport default useGetBullHiccupClaimableStatus\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap-libs/uikit'\r\nimport history from 'routerHistory'\r\nimport { delay } from 'lodash'\r\nimport useI18n from 'hooks/useI18n'\r\nimport confetti from 'canvas-confetti'\r\nimport nftList from 'config/constants/nfts'\r\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\r\n\r\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\r\n  isBullClaimable: boolean\r\n  isHiccupClaimable: boolean\r\n}\r\n\r\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\r\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\r\n\r\nconst NftImage = styled.img`\r\n  border-radius: 50%;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst showConfetti = () => {\r\n  confetti({\r\n    resize: true,\r\n    particleCount: 200,\r\n    startVelocity: 30,\r\n    gravity: 0.5,\r\n    spread: 350,\r\n    origin: {\r\n      x: 0.5,\r\n      y: 0.3,\r\n    },\r\n  })\r\n}\r\n\r\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\r\n  if (isBullClaimable && isHiccupClaimable) {\r\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\r\n  }\r\n\r\n  if (isBullClaimable) {\r\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n  }\r\n\r\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n}\r\n\r\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\r\n  isBullClaimable,\r\n  isHiccupClaimable,\r\n  onDismiss,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const collectibleMessage =\r\n    isBullClaimable && isHiccupClaimable\r\n      ? TranslateString(999, 'You won two Collectibles!')\r\n      : TranslateString(999, 'You won a collectible!')\r\n\r\n  // This is required because the modal exists outside the Router\r\n  const handleClick = () => {\r\n    onDismiss()\r\n    history.push('/collectibles')\r\n  }\r\n\r\n  useEffect(() => {\r\n    delay(showConfetti, 100)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\r\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\r\n          {collectibleMessage}\r\n        </Text>\r\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimBullHiccupNftModal\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useModal } from '@pancakeswap-libs/uikit'\r\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\r\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\r\n\r\n/**\r\n * This is represented as a component rather than a hook because we need to keep it\r\n * inside the Router.\r\n *\r\n * TODO: Put global checks in redux or make a generic area to house global checks\r\n */\r\nconst GlobalCheckBullHiccupClaimStatus = () => {\r\n  const hasDisplayedModal = useRef(false)\r\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\r\n  const [onPresentGiftModal] = useModal(\r\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\r\n  )\r\n  const { account } = useWeb3React()\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\r\n      onPresentGiftModal()\r\n      hasDisplayedModal.current = true\r\n    }\r\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\r\n\r\n  // Reset the check flag when account changes\r\n  useEffect(() => {\r\n    hasDisplayedModal.current = false\r\n  }, [account, hasDisplayedModal])\r\n\r\n  return null\r\n}\r\n\r\nexport default GlobalCheckBullHiccupClaimStatus\r\n","import React, { useEffect,useRef,useState, lazy } from \"react\";\nimport { HashRouter, Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport { ResetCSS } from \"@pancakeswap-libs/uikit\";\nimport BigNumber from \"bignumber.js\";\nimport useEagerConnect from \"hooks/useEagerConnect\";\nimport {\n  useFetchPriceList,\n  useFetchProfile,\n  useFetchPublicData,\n} from \"state/hooks\";\nimport useGetDocumentTitlePrice from \"./hooks/useGetDocumentTitlePrice\";\nimport GlobalStyle from \"./style/Global\";\nimport Menu from \"./components/Menu\";\nimport SuspenseWithChunkError from \"./components/SuspenseWithChunkError\";\nimport ToastListener from \"./components/ToastListener\";\nimport PageLoader from \"./components/PageLoader\";\n// import EasterEgg from './components/EasterEgg'\n// import Pools from './views/Pools'\n// import PoolsComingSoon from './views/Pools/components/ComingSoon'\n\nimport GlobalCheckBullHiccupClaimStatus from \"./views/Collectibles/components/GlobalCheckBullHiccupClaimStatus\";\nimport history from \"./routerHistory\";\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import(\"./views/Home\"));\nconst FarmsComingSoon = lazy(\n  () => import(\"./views/Farms/components/ComingSoon\")\n);\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\nconst NotFound = lazy(() => import(\"./views/NotFound\"));\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n});\n\nconst App: React.FC = () => {\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null;\n  }, []);\n\n  useEagerConnect();\n  useFetchPublicData();\n  useFetchProfile();\n  useFetchPriceList();\n  useGetDocumentTitlePrice();\n\n  const [videoPlayed,setVideoPlayed] = useState(false)\n  return (\n    <HashRouter>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              {/* <FarmsComingSoon/> */}\n              <Home videoPlayed={videoPlayed} setVideoPlayed={setVideoPlayed}/>\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n              {/* <Farms /> */}\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      {/* <EasterEgg iterations={2} /> */}\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </HashRouter>\n  );\n};\n\nexport default React.memo(App);\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport toastsReducer from './toasts'\r\nimport poolsReducer from './pools'\r\nimport pricesReducer from './prices'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    toasts: toastsReducer,\r\n    pools: poolsReducer,\r\n    prices: pricesReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeContextProvider>\r\n          <LanguageContextProvider>\r\n            <RefreshContextProvider>\r\n              <ModalProvider>{children}</ModalProvider>\r\n            </RefreshContextProvider>\r\n          </LanguageContextProvider>\r\n        </ThemeContextProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { Toast } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ToastsState } from '../types'\r\n\r\nconst initialState: ToastsState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state: ToastsState) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport nfts from 'config/constants/nfts'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst rabbitContract = getPancakeRabbitContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\r\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\r\n\r\n// Thunks\r\nexport const fetchProfile = (address: string) => async (dispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n"],"sourceRoot":""}